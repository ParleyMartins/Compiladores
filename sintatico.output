Terminals unused in grammar

   PLUS
   MINUS
   TIMES
   DIVIDE
   POWER
   OPEN_PARENTHESIS
   CLOSE_PARENTHESIS
   RECEIVE
   NOT
   START
   FOR
   FUNCTION
   SCAN
   INT
   FLOAT
   CHAR
   STRING_TYPE
   BOOL
   NUMBER
   END_FOR
   END_FUNCTION


Grammar

    0 $accept: Input $end

    1 Input: /* empty */
    2      | Input Line

    3 Line: END_LINE
    4     | Expression
    5     | END

    6 Expression: PrintExpression
    7           | IfExpression
    8           | WhileExpression

    9 PrintExpression: PRINT STRING_VALUE

   10 IfExpression: IF BoolComparasion THEN
   11             | ELSE
   12             | END_IF

   13 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   14                | BoolExpression

   15 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER

   16 LogicalComparer: LESS_THAN
   17                | GREATER_THAN
   18                | LESS_OR_EQUAL
   19                | GREATER_OR_EQUAL
   20                | DIFFERENT
   21                | EQUAL

   22 BinaryOperator: AND
   23               | OR

   24 WhileExpression: WHILE BoolComparasion
   25                | END_WHILE


Terminals, with rules where they appear

$end (0) 0
error (256)
PLUS (258)
MINUS (259)
TIMES (260)
DIVIDE (261)
POWER (262)
LESS_THAN (263) 16
GREATER_THAN (264) 17
LESS_OR_EQUAL (265) 18
GREATER_OR_EQUAL (266) 19
OPEN_PARENTHESIS (267)
CLOSE_PARENTHESIS (268)
DIFFERENT (269) 20
EQUAL (270) 21
RECEIVE (271)
AND (272) 22
OR (273) 23
NOT (274)
END_LINE (275) 3
START (276)
END (277) 5
IF (278) 10
THEN (279) 10
ELSE (280) 11
FOR (281)
WHILE (282) 24
FUNCTION (283)
PRINT (284) 9
SCAN (285)
INT (286)
FLOAT (287)
CHAR (288)
STRING_TYPE (289)
BOOL (290)
IDENTIFIER (291) 15
NUMBER (292)
STRING_VALUE (293) 9
END_IF (294) 12
END_FOR (295)
END_WHILE (296) 25
END_FUNCTION (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Input (44)
    on left: 1 2, on right: 0 2
Line (45)
    on left: 3 4 5, on right: 2
Expression (46)
    on left: 6 7 8, on right: 4
PrintExpression (47)
    on left: 9, on right: 6
IfExpression (48)
    on left: 10 11 12, on right: 7
BoolComparasion (49)
    on left: 13 14, on right: 10 13 24
BoolExpression (50)
    on left: 15, on right: 13 14
LogicalComparer (51)
    on left: 16 17 18 19 20 21, on right: 15
BinaryOperator (52)
    on left: 22 23, on right: 13
WhileExpression (53)
    on left: 24 25, on right: 8


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . Line

    $end       shift, and go to state 2
    END_LINE   shift, and go to state 3
    END        shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    WHILE      shift, and go to state 7
    PRINT      shift, and go to state 8
    END_IF     shift, and go to state 9
    END_WHILE  shift, and go to state 10

    Line             go to state 11
    Expression       go to state 12
    PrintExpression  go to state 13
    IfExpression     go to state 14
    WhileExpression  go to state 15


State 2

    0 $accept: Input $end .

    $default  accept


State 3

    3 Line: END_LINE .

    $default  reduce using rule 3 (Line)


State 4

    5 Line: END .

    $default  reduce using rule 5 (Line)


State 5

   10 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 16

    BoolComparasion  go to state 17
    BoolExpression   go to state 18


State 6

   11 IfExpression: ELSE .

    $default  reduce using rule 11 (IfExpression)


State 7

   24 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 16

    BoolComparasion  go to state 19
    BoolExpression   go to state 18


State 8

    9 PrintExpression: PRINT . STRING_VALUE

    STRING_VALUE  shift, and go to state 20


State 9

   12 IfExpression: END_IF .

    $default  reduce using rule 12 (IfExpression)


State 10

   25 WhileExpression: END_WHILE .

    $default  reduce using rule 25 (WhileExpression)


State 11

    2 Input: Input Line .

    $default  reduce using rule 2 (Input)


State 12

    4 Line: Expression .

    $default  reduce using rule 4 (Line)


State 13

    6 Expression: PrintExpression .

    $default  reduce using rule 6 (Expression)


State 14

    7 Expression: IfExpression .

    $default  reduce using rule 7 (Expression)


State 15

    8 Expression: WhileExpression .

    $default  reduce using rule 8 (Expression)


State 16

   15 BoolExpression: IDENTIFIER . LogicalComparer IDENTIFIER

    LESS_THAN         shift, and go to state 21
    GREATER_THAN      shift, and go to state 22
    LESS_OR_EQUAL     shift, and go to state 23
    GREATER_OR_EQUAL  shift, and go to state 24
    DIFFERENT         shift, and go to state 25
    EQUAL             shift, and go to state 26

    LogicalComparer  go to state 27


State 17

   10 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 28


State 18

   13 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   14                | BoolExpression .

    AND  shift, and go to state 29
    OR   shift, and go to state 30

    $default  reduce using rule 14 (BoolComparasion)

    BinaryOperator  go to state 31


State 19

   24 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 24 (WhileExpression)


State 20

    9 PrintExpression: PRINT STRING_VALUE .

    $default  reduce using rule 9 (PrintExpression)


State 21

   16 LogicalComparer: LESS_THAN .

    $default  reduce using rule 16 (LogicalComparer)


State 22

   17 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 17 (LogicalComparer)


State 23

   18 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 18 (LogicalComparer)


State 24

   19 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 19 (LogicalComparer)


State 25

   20 LogicalComparer: DIFFERENT .

    $default  reduce using rule 20 (LogicalComparer)


State 26

   21 LogicalComparer: EQUAL .

    $default  reduce using rule 21 (LogicalComparer)


State 27

   15 BoolExpression: IDENTIFIER LogicalComparer . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 28

   10 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 10 (IfExpression)


State 29

   22 BinaryOperator: AND .

    $default  reduce using rule 22 (BinaryOperator)


State 30

   23 BinaryOperator: OR .

    $default  reduce using rule 23 (BinaryOperator)


State 31

   13 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 16

    BoolComparasion  go to state 33
    BoolExpression   go to state 18


State 32

   15 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER .

    $default  reduce using rule 15 (BoolExpression)


State 33

   13 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 13 (BoolComparasion)
