Terminals unused in grammar

   POWER
   NOT
   FUNCTION
   SCAN
   END_FUNCTION


State 53 conflicts: 19 reduce/reduce
State 76 conflicts: 4 shift/reduce


Grammar

    0 $accept: Input $end

    1 Input: /* empty */
    2      | Input Line

    3 Line: END_LINE
    4     | START
    5     | Expression
    6     | error
    7     | END

    8 Expression: PrintExpression
    9           | IfExpression
   10           | WhileExpression
   11           | ForExpression
   12           | AttribuitionExpression
   13           | DeclarationExpression

   14 PrintExpression: PRINT STRING_VALUE
   15                | PRINT IDENTIFIER

   16 IfExpression: IF BoolComparasion THEN
   17             | ELSE
   18             | END_IF

   19 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   20                | BoolExpression

   21 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER

   22 LogicalComparer: LESS_THAN
   23                | GREATER_THAN
   24                | LESS_OR_EQUAL
   25                | GREATER_OR_EQUAL
   26                | DIFFERENT
   27                | EQUAL

   28 BinaryOperator: AND
   29               | OR

   30 WhileExpression: WHILE BoolComparasion
   31                | END_WHILE

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   33              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
   34              | END_FOR

   35 NumberOrIdentifier: IDENTIFIER
   36                   | NUMBER

   37 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue

   38 AttribuitionValue: NUMBER
   39                  | STRING_VALUE
   40                  | TRUE
   41                  | FALSE
   42                  | MathExpression

   43 DeclarationExpression: Type IDENTIFIER
   44                      | Type IDENTIFIER RECEIVES AttribuitionValue

   45 Type: INT
   46     | FLOAT
   47     | CHAR
   48     | STRING_TYPE
   49     | BOOL

   50 MathExpression: MathParam
   51               | MathExpression Operator MathExpression
   52               | OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS

   53 MathParam: IDENTIFIER
   54          | NUMBER

   55 Operator: PLUS
   56         | MINUS
   57         | DIVIDE
   58         | TIMES


Terminals, with rules where they appear

$end (0) 0
error (256) 6
PLUS (258) 55
MINUS (259) 56
TIMES (260) 58
DIVIDE (261) 57
POWER (262)
LESS_THAN (263) 22
GREATER_THAN (264) 23
LESS_OR_EQUAL (265) 24
GREATER_OR_EQUAL (266) 25
OPEN_PARENTHESIS (267) 52
CLOSE_PARENTHESIS (268) 52
DIFFERENT (269) 26
EQUAL (270) 27
RECEIVES (271) 37 44
AND (272) 28
OR (273) 29
NOT (274)
END_LINE (275) 3
START (276) 4
END (277) 7
IF (278) 16
THEN (279) 16
ELSE (280) 17
FOR (281) 32 33
WHILE (282) 30
FUNCTION (283)
FROM (284) 32 33
TO (285) 32 33
STEP (286) 32
PRINT (287) 14 15
SCAN (288)
INT (289) 45
FLOAT (290) 46
CHAR (291) 47
STRING_TYPE (292) 48
BOOL (293) 49
IDENTIFIER (294) 15 21 32 33 35 37 43 44 53
NUMBER (295) 32 36 38 54
STRING_VALUE (296) 14 39
END_IF (297) 18
END_FOR (298) 34
END_WHILE (299) 31
END_FUNCTION (300)
TRUE (301) 40
FALSE (302) 41


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Input (49)
    on left: 1 2, on right: 0 2
Line (50)
    on left: 3 4 5 6 7, on right: 2
Expression (51)
    on left: 8 9 10 11 12 13, on right: 5
PrintExpression (52)
    on left: 14 15, on right: 8
IfExpression (53)
    on left: 16 17 18, on right: 9
BoolComparasion (54)
    on left: 19 20, on right: 16 19 30
BoolExpression (55)
    on left: 21, on right: 19 20
LogicalComparer (56)
    on left: 22 23 24 25 26 27, on right: 21
BinaryOperator (57)
    on left: 28 29, on right: 19
WhileExpression (58)
    on left: 30 31, on right: 10
ForExpression (59)
    on left: 32 33 34, on right: 11
NumberOrIdentifier (60)
    on left: 35 36, on right: 32 33
AttribuitionExpression (61)
    on left: 37, on right: 12
AttribuitionValue (62)
    on left: 38 39 40 41 42, on right: 37 44
DeclarationExpression (63)
    on left: 43 44, on right: 13
Type (64)
    on left: 45 46 47 48 49, on right: 43 44
MathExpression (65)
    on left: 50 51 52, on right: 42 51 52
MathParam (66)
    on left: 53 54, on right: 50
Operator (67)
    on left: 55 56 57 58, on right: 51


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . Line

    $end         shift, and go to state 2
    error        shift, and go to state 3
    END_LINE     shift, and go to state 4
    START        shift, and go to state 5
    END          shift, and go to state 6
    IF           shift, and go to state 7
    ELSE         shift, and go to state 8
    FOR          shift, and go to state 9
    WHILE        shift, and go to state 10
    PRINT        shift, and go to state 11
    INT          shift, and go to state 12
    FLOAT        shift, and go to state 13
    CHAR         shift, and go to state 14
    STRING_TYPE  shift, and go to state 15
    BOOL         shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    END_IF       shift, and go to state 18
    END_FOR      shift, and go to state 19
    END_WHILE    shift, and go to state 20

    Line                    go to state 21
    Expression              go to state 22
    PrintExpression         go to state 23
    IfExpression            go to state 24
    WhileExpression         go to state 25
    ForExpression           go to state 26
    AttribuitionExpression  go to state 27
    DeclarationExpression   go to state 28
    Type                    go to state 29


State 2

    0 $accept: Input $end .

    $default  accept


State 3

    6 Line: error .

    $default  reduce using rule 6 (Line)


State 4

    3 Line: END_LINE .

    $default  reduce using rule 3 (Line)


State 5

    4 Line: START .

    $default  reduce using rule 4 (Line)


State 6

    7 Line: END .

    $default  reduce using rule 7 (Line)


State 7

   16 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 30

    BoolComparasion  go to state 31
    BoolExpression   go to state 32


State 8

   17 IfExpression: ELSE .

    $default  reduce using rule 17 (IfExpression)


State 9

   32 ForExpression: FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   33              | FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 33


State 10

   30 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 30

    BoolComparasion  go to state 34
    BoolExpression   go to state 32


State 11

   14 PrintExpression: PRINT . STRING_VALUE
   15                | PRINT . IDENTIFIER

    IDENTIFIER    shift, and go to state 35
    STRING_VALUE  shift, and go to state 36


State 12

   45 Type: INT .

    $default  reduce using rule 45 (Type)


State 13

   46 Type: FLOAT .

    $default  reduce using rule 46 (Type)


State 14

   47 Type: CHAR .

    $default  reduce using rule 47 (Type)


State 15

   48 Type: STRING_TYPE .

    $default  reduce using rule 48 (Type)


State 16

   49 Type: BOOL .

    $default  reduce using rule 49 (Type)


State 17

   37 AttribuitionExpression: IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 37


State 18

   18 IfExpression: END_IF .

    $default  reduce using rule 18 (IfExpression)


State 19

   34 ForExpression: END_FOR .

    $default  reduce using rule 34 (ForExpression)


State 20

   31 WhileExpression: END_WHILE .

    $default  reduce using rule 31 (WhileExpression)


State 21

    2 Input: Input Line .

    $default  reduce using rule 2 (Input)


State 22

    5 Line: Expression .

    $default  reduce using rule 5 (Line)


State 23

    8 Expression: PrintExpression .

    $default  reduce using rule 8 (Expression)


State 24

    9 Expression: IfExpression .

    $default  reduce using rule 9 (Expression)


State 25

   10 Expression: WhileExpression .

    $default  reduce using rule 10 (Expression)


State 26

   11 Expression: ForExpression .

    $default  reduce using rule 11 (Expression)


State 27

   12 Expression: AttribuitionExpression .

    $default  reduce using rule 12 (Expression)


State 28

   13 Expression: DeclarationExpression .

    $default  reduce using rule 13 (Expression)


State 29

   43 DeclarationExpression: Type . IDENTIFIER
   44                      | Type . IDENTIFIER RECEIVES AttribuitionValue

    IDENTIFIER  shift, and go to state 38


State 30

   21 BoolExpression: IDENTIFIER . LogicalComparer IDENTIFIER

    LESS_THAN         shift, and go to state 39
    GREATER_THAN      shift, and go to state 40
    LESS_OR_EQUAL     shift, and go to state 41
    GREATER_OR_EQUAL  shift, and go to state 42
    DIFFERENT         shift, and go to state 43
    EQUAL             shift, and go to state 44

    LogicalComparer  go to state 45


State 31

   16 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 46


State 32

   19 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   20                | BoolExpression .

    AND  shift, and go to state 47
    OR   shift, and go to state 48

    $default  reduce using rule 20 (BoolComparasion)

    BinaryOperator  go to state 49


State 33

   32 ForExpression: FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   33              | FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier

    FROM  shift, and go to state 50


State 34

   30 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 30 (WhileExpression)


State 35

   15 PrintExpression: PRINT IDENTIFIER .

    $default  reduce using rule 15 (PrintExpression)


State 36

   14 PrintExpression: PRINT STRING_VALUE .

    $default  reduce using rule 14 (PrintExpression)


State 37

   37 AttribuitionExpression: IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 51
    IDENTIFIER        shift, and go to state 52
    NUMBER            shift, and go to state 53
    STRING_VALUE      shift, and go to state 54
    TRUE              shift, and go to state 55
    FALSE             shift, and go to state 56

    AttribuitionValue  go to state 57
    MathExpression     go to state 58
    MathParam          go to state 59


State 38

   43 DeclarationExpression: Type IDENTIFIER .
   44                      | Type IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 60

    $default  reduce using rule 43 (DeclarationExpression)


State 39

   22 LogicalComparer: LESS_THAN .

    $default  reduce using rule 22 (LogicalComparer)


State 40

   23 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 23 (LogicalComparer)


State 41

   24 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 24 (LogicalComparer)


State 42

   25 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 25 (LogicalComparer)


State 43

   26 LogicalComparer: DIFFERENT .

    $default  reduce using rule 26 (LogicalComparer)


State 44

   27 LogicalComparer: EQUAL .

    $default  reduce using rule 27 (LogicalComparer)


State 45

   21 BoolExpression: IDENTIFIER LogicalComparer . IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 46

   16 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 16 (IfExpression)


State 47

   28 BinaryOperator: AND .

    $default  reduce using rule 28 (BinaryOperator)


State 48

   29 BinaryOperator: OR .

    $default  reduce using rule 29 (BinaryOperator)


State 49

   19 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 30

    BoolComparasion  go to state 62
    BoolExpression   go to state 32


State 50

   32 ForExpression: FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   33              | FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 63
    NUMBER      shift, and go to state 64

    NumberOrIdentifier  go to state 65


State 51

   52 MathExpression: OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 51
    IDENTIFIER        shift, and go to state 52
    NUMBER            shift, and go to state 66

    MathExpression  go to state 67
    MathParam       go to state 59


State 52

   53 MathParam: IDENTIFIER .

    $default  reduce using rule 53 (MathParam)


State 53

   38 AttribuitionValue: NUMBER .
   54 MathParam: NUMBER .

    $end         reduce using rule 38 (AttribuitionValue)
    $end         [reduce using rule 54 (MathParam)]
    error        reduce using rule 38 (AttribuitionValue)
    error        [reduce using rule 54 (MathParam)]
    PLUS         reduce using rule 54 (MathParam)
    MINUS        reduce using rule 54 (MathParam)
    TIMES        reduce using rule 54 (MathParam)
    DIVIDE       reduce using rule 54 (MathParam)
    END_LINE     reduce using rule 38 (AttribuitionValue)
    END_LINE     [reduce using rule 54 (MathParam)]
    START        reduce using rule 38 (AttribuitionValue)
    START        [reduce using rule 54 (MathParam)]
    END          reduce using rule 38 (AttribuitionValue)
    END          [reduce using rule 54 (MathParam)]
    IF           reduce using rule 38 (AttribuitionValue)
    IF           [reduce using rule 54 (MathParam)]
    ELSE         reduce using rule 38 (AttribuitionValue)
    ELSE         [reduce using rule 54 (MathParam)]
    FOR          reduce using rule 38 (AttribuitionValue)
    FOR          [reduce using rule 54 (MathParam)]
    WHILE        reduce using rule 38 (AttribuitionValue)
    WHILE        [reduce using rule 54 (MathParam)]
    PRINT        reduce using rule 38 (AttribuitionValue)
    PRINT        [reduce using rule 54 (MathParam)]
    INT          reduce using rule 38 (AttribuitionValue)
    INT          [reduce using rule 54 (MathParam)]
    FLOAT        reduce using rule 38 (AttribuitionValue)
    FLOAT        [reduce using rule 54 (MathParam)]
    CHAR         reduce using rule 38 (AttribuitionValue)
    CHAR         [reduce using rule 54 (MathParam)]
    STRING_TYPE  reduce using rule 38 (AttribuitionValue)
    STRING_TYPE  [reduce using rule 54 (MathParam)]
    BOOL         reduce using rule 38 (AttribuitionValue)
    BOOL         [reduce using rule 54 (MathParam)]
    IDENTIFIER   reduce using rule 38 (AttribuitionValue)
    IDENTIFIER   [reduce using rule 54 (MathParam)]
    END_IF       reduce using rule 38 (AttribuitionValue)
    END_IF       [reduce using rule 54 (MathParam)]
    END_FOR      reduce using rule 38 (AttribuitionValue)
    END_FOR      [reduce using rule 54 (MathParam)]
    END_WHILE    reduce using rule 38 (AttribuitionValue)
    END_WHILE    [reduce using rule 54 (MathParam)]
    $default     reduce using rule 38 (AttribuitionValue)


State 54

   39 AttribuitionValue: STRING_VALUE .

    $default  reduce using rule 39 (AttribuitionValue)


State 55

   40 AttribuitionValue: TRUE .

    $default  reduce using rule 40 (AttribuitionValue)


State 56

   41 AttribuitionValue: FALSE .

    $default  reduce using rule 41 (AttribuitionValue)


State 57

   37 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 37 (AttribuitionExpression)


State 58

   42 AttribuitionValue: MathExpression .
   51 MathExpression: MathExpression . Operator MathExpression

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 42 (AttribuitionValue)

    Operator  go to state 72


State 59

   50 MathExpression: MathParam .

    $default  reduce using rule 50 (MathExpression)


State 60

   44 DeclarationExpression: Type IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 51
    IDENTIFIER        shift, and go to state 52
    NUMBER            shift, and go to state 53
    STRING_VALUE      shift, and go to state 54
    TRUE              shift, and go to state 55
    FALSE             shift, and go to state 56

    AttribuitionValue  go to state 73
    MathExpression     go to state 58
    MathParam          go to state 59


State 61

   21 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER .

    $default  reduce using rule 21 (BoolExpression)


State 62

   19 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 19 (BoolComparasion)


State 63

   35 NumberOrIdentifier: IDENTIFIER .

    $default  reduce using rule 35 (NumberOrIdentifier)


State 64

   36 NumberOrIdentifier: NUMBER .

    $default  reduce using rule 36 (NumberOrIdentifier)


State 65

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER
   33              | FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier

    TO  shift, and go to state 74


State 66

   54 MathParam: NUMBER .

    $default  reduce using rule 54 (MathParam)


State 67

   51 MathExpression: MathExpression . Operator MathExpression
   52               | OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS

    PLUS               shift, and go to state 68
    MINUS              shift, and go to state 69
    TIMES              shift, and go to state 70
    DIVIDE             shift, and go to state 71
    CLOSE_PARENTHESIS  shift, and go to state 75

    Operator  go to state 72


State 68

   55 Operator: PLUS .

    $default  reduce using rule 55 (Operator)


State 69

   56 Operator: MINUS .

    $default  reduce using rule 56 (Operator)


State 70

   58 Operator: TIMES .

    $default  reduce using rule 58 (Operator)


State 71

   57 Operator: DIVIDE .

    $default  reduce using rule 57 (Operator)


State 72

   51 MathExpression: MathExpression Operator . MathExpression

    OPEN_PARENTHESIS  shift, and go to state 51
    IDENTIFIER        shift, and go to state 52
    NUMBER            shift, and go to state 66

    MathExpression  go to state 76
    MathParam       go to state 59


State 73

   44 DeclarationExpression: Type IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 44 (DeclarationExpression)


State 74

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER
   33              | FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 63
    NUMBER      shift, and go to state 64

    NumberOrIdentifier  go to state 77


State 75

   52 MathExpression: OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .

    $default  reduce using rule 52 (MathExpression)


State 76

   51 MathExpression: MathExpression . Operator MathExpression
   51               | MathExpression Operator MathExpression .

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    PLUS      [reduce using rule 51 (MathExpression)]
    MINUS     [reduce using rule 51 (MathExpression)]
    TIMES     [reduce using rule 51 (MathExpression)]
    DIVIDE    [reduce using rule 51 (MathExpression)]
    $default  reduce using rule 51 (MathExpression)

    Operator  go to state 72


State 77

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER
   33              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .

    STEP  shift, and go to state 78

    $default  reduce using rule 33 (ForExpression)


State 78

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER

    NUMBER  shift, and go to state 79


State 79

   32 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .

    $default  reduce using rule 32 (ForExpression)
