Terminals unused in grammar

   POWER
   NOT
   FUNCTION
   SCAN
   END_FUNCTION


State 52 conflicts: 18 reduce/reduce
State 75 conflicts: 4 shift/reduce


Grammar

    0 $accept: Input $end

    1 Input: /* empty */
    2      | Input Line

    3 Line: END_LINE
    4     | START
    5     | Expression
    6     | END

    7 Expression: PrintExpression
    8           | IfExpression
    9           | WhileExpression
   10           | ForExpression
   11           | AttribuitionExpression
   12           | DeclarationExpression

   13 PrintExpression: PRINT STRING_VALUE
   14                | PRINT IDENTIFIER

   15 IfExpression: IF BoolComparasion THEN
   16             | ELSE
   17             | END_IF

   18 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   19                | BoolExpression

   20 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER

   21 LogicalComparer: LESS_THAN
   22                | GREATER_THAN
   23                | LESS_OR_EQUAL
   24                | GREATER_OR_EQUAL
   25                | DIFFERENT
   26                | EQUAL

   27 BinaryOperator: AND
   28               | OR

   29 WhileExpression: WHILE BoolComparasion
   30                | END_WHILE

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   32              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
   33              | END_FOR

   34 NumberOrIdentifier: IDENTIFIER
   35                   | NUMBER

   36 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue

   37 AttribuitionValue: NUMBER
   38                  | STRING_VALUE
   39                  | TRUE
   40                  | FALSE
   41                  | MathExpression

   42 DeclarationExpression: Type IDENTIFIER
   43                      | Type IDENTIFIER RECEIVES AttribuitionValue

   44 Type: INT
   45     | FLOAT
   46     | CHAR
   47     | STRING_TYPE
   48     | BOOL

   49 MathExpression: MathParam
   50               | MathExpression Operator MathExpression
   51               | OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS

   52 MathParam: IDENTIFIER
   53          | NUMBER

   54 Operator: PLUS
   55         | MINUS
   56         | DIVIDE
   57         | TIMES


Terminals, with rules where they appear

$end (0) 0
error (256)
PLUS (258) 54
MINUS (259) 55
TIMES (260) 57
DIVIDE (261) 56
POWER (262)
LESS_THAN (263) 21
GREATER_THAN (264) 22
LESS_OR_EQUAL (265) 23
GREATER_OR_EQUAL (266) 24
OPEN_PARENTHESIS (267) 51
CLOSE_PARENTHESIS (268) 51
DIFFERENT (269) 25
EQUAL (270) 26
RECEIVES (271) 36 43
AND (272) 27
OR (273) 28
NOT (274)
END_LINE (275) 3
START (276) 4
END (277) 6
IF (278) 15
THEN (279) 15
ELSE (280) 16
FOR (281) 31 32
WHILE (282) 29
FUNCTION (283)
FROM (284) 31 32
TO (285) 31 32
STEP (286) 31
PRINT (287) 13 14
SCAN (288)
INT (289) 44
FLOAT (290) 45
CHAR (291) 46
STRING_TYPE (292) 47
BOOL (293) 48
IDENTIFIER (294) 14 20 31 32 34 36 42 43 52
NUMBER (295) 31 35 37 53
STRING_VALUE (296) 13 38
END_IF (297) 17
END_FOR (298) 33
END_WHILE (299) 30
END_FUNCTION (300)
TRUE (301) 39
FALSE (302) 40


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Input (49)
    on left: 1 2, on right: 0 2
Line (50)
    on left: 3 4 5 6, on right: 2
Expression (51)
    on left: 7 8 9 10 11 12, on right: 5
PrintExpression (52)
    on left: 13 14, on right: 7
IfExpression (53)
    on left: 15 16 17, on right: 8
BoolComparasion (54)
    on left: 18 19, on right: 15 18 29
BoolExpression (55)
    on left: 20, on right: 18 19
LogicalComparer (56)
    on left: 21 22 23 24 25 26, on right: 20
BinaryOperator (57)
    on left: 27 28, on right: 18
WhileExpression (58)
    on left: 29 30, on right: 9
ForExpression (59)
    on left: 31 32 33, on right: 10
NumberOrIdentifier (60)
    on left: 34 35, on right: 31 32
AttribuitionExpression (61)
    on left: 36, on right: 11
AttribuitionValue (62)
    on left: 37 38 39 40 41, on right: 36 43
DeclarationExpression (63)
    on left: 42 43, on right: 12
Type (64)
    on left: 44 45 46 47 48, on right: 42 43
MathExpression (65)
    on left: 49 50 51, on right: 41 50 51
MathParam (66)
    on left: 52 53, on right: 49
Operator (67)
    on left: 54 55 56 57, on right: 50


state 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


state 1

    0 $accept: Input . $end
    2 Input: Input . Line

    $end         shift, and go to state 2
    END_LINE     shift, and go to state 3
    START        shift, and go to state 4
    END          shift, and go to state 5
    IF           shift, and go to state 6
    ELSE         shift, and go to state 7
    FOR          shift, and go to state 8
    WHILE        shift, and go to state 9
    PRINT        shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    CHAR         shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    BOOL         shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    END_IF       shift, and go to state 17
    END_FOR      shift, and go to state 18
    END_WHILE    shift, and go to state 19

    Line                    go to state 20
    Expression              go to state 21
    PrintExpression         go to state 22
    IfExpression            go to state 23
    WhileExpression         go to state 24
    ForExpression           go to state 25
    AttribuitionExpression  go to state 26
    DeclarationExpression   go to state 27
    Type                    go to state 28


state 2

    0 $accept: Input $end .

    $default  accept


state 3

    3 Line: END_LINE .

    $default  reduce using rule 3 (Line)


state 4

    4 Line: START .

    $default  reduce using rule 4 (Line)


state 5

    6 Line: END .

    $default  reduce using rule 6 (Line)


state 6

   15 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 29

    BoolComparasion  go to state 30
    BoolExpression   go to state 31


state 7

   16 IfExpression: ELSE .

    $default  reduce using rule 16 (IfExpression)


state 8

   31 ForExpression: FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   32              | FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 32


state 9

   29 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 29

    BoolComparasion  go to state 33
    BoolExpression   go to state 31


state 10

   13 PrintExpression: PRINT . STRING_VALUE
   14                | PRINT . IDENTIFIER

    IDENTIFIER    shift, and go to state 34
    STRING_VALUE  shift, and go to state 35


state 11

   44 Type: INT .

    $default  reduce using rule 44 (Type)


state 12

   45 Type: FLOAT .

    $default  reduce using rule 45 (Type)


state 13

   46 Type: CHAR .

    $default  reduce using rule 46 (Type)


state 14

   47 Type: STRING_TYPE .

    $default  reduce using rule 47 (Type)


state 15

   48 Type: BOOL .

    $default  reduce using rule 48 (Type)


state 16

   36 AttribuitionExpression: IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 36


state 17

   17 IfExpression: END_IF .

    $default  reduce using rule 17 (IfExpression)


state 18

   33 ForExpression: END_FOR .

    $default  reduce using rule 33 (ForExpression)


state 19

   30 WhileExpression: END_WHILE .

    $default  reduce using rule 30 (WhileExpression)


state 20

    2 Input: Input Line .

    $default  reduce using rule 2 (Input)


state 21

    5 Line: Expression .

    $default  reduce using rule 5 (Line)


state 22

    7 Expression: PrintExpression .

    $default  reduce using rule 7 (Expression)


state 23

    8 Expression: IfExpression .

    $default  reduce using rule 8 (Expression)


state 24

    9 Expression: WhileExpression .

    $default  reduce using rule 9 (Expression)


state 25

   10 Expression: ForExpression .

    $default  reduce using rule 10 (Expression)


state 26

   11 Expression: AttribuitionExpression .

    $default  reduce using rule 11 (Expression)


state 27

   12 Expression: DeclarationExpression .

    $default  reduce using rule 12 (Expression)


state 28

   42 DeclarationExpression: Type . IDENTIFIER
   43                      | Type . IDENTIFIER RECEIVES AttribuitionValue

    IDENTIFIER  shift, and go to state 37


state 29

   20 BoolExpression: IDENTIFIER . LogicalComparer IDENTIFIER

    LESS_THAN         shift, and go to state 38
    GREATER_THAN      shift, and go to state 39
    LESS_OR_EQUAL     shift, and go to state 40
    GREATER_OR_EQUAL  shift, and go to state 41
    DIFFERENT         shift, and go to state 42
    EQUAL             shift, and go to state 43

    LogicalComparer  go to state 44


state 30

   15 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 45


state 31

   18 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   19                | BoolExpression .

    AND  shift, and go to state 46
    OR   shift, and go to state 47

    $default  reduce using rule 19 (BoolComparasion)

    BinaryOperator  go to state 48


state 32

   31 ForExpression: FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   32              | FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier

    FROM  shift, and go to state 49


state 33

   29 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 29 (WhileExpression)


state 34

   14 PrintExpression: PRINT IDENTIFIER .

    $default  reduce using rule 14 (PrintExpression)


state 35

   13 PrintExpression: PRINT STRING_VALUE .

    $default  reduce using rule 13 (PrintExpression)


state 36

   36 AttribuitionExpression: IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52
    STRING_VALUE      shift, and go to state 53
    TRUE              shift, and go to state 54
    FALSE             shift, and go to state 55

    AttribuitionValue  go to state 56
    MathExpression     go to state 57
    MathParam          go to state 58


state 37

   42 DeclarationExpression: Type IDENTIFIER .
   43                      | Type IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 59

    $default  reduce using rule 42 (DeclarationExpression)


state 38

   21 LogicalComparer: LESS_THAN .

    $default  reduce using rule 21 (LogicalComparer)


state 39

   22 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 22 (LogicalComparer)


state 40

   23 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 23 (LogicalComparer)


state 41

   24 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 24 (LogicalComparer)


state 42

   25 LogicalComparer: DIFFERENT .

    $default  reduce using rule 25 (LogicalComparer)


state 43

   26 LogicalComparer: EQUAL .

    $default  reduce using rule 26 (LogicalComparer)


state 44

   20 BoolExpression: IDENTIFIER LogicalComparer . IDENTIFIER

    IDENTIFIER  shift, and go to state 60


state 45

   15 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 15 (IfExpression)


state 46

   27 BinaryOperator: AND .

    $default  reduce using rule 27 (BinaryOperator)


state 47

   28 BinaryOperator: OR .

    $default  reduce using rule 28 (BinaryOperator)


state 48

   18 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 29

    BoolComparasion  go to state 61
    BoolExpression   go to state 31


state 49

   31 ForExpression: FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   32              | FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63

    NumberOrIdentifier  go to state 64


state 50

   51 MathExpression: OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 65

    MathExpression  go to state 66
    MathParam       go to state 58


state 51

   52 MathParam: IDENTIFIER .

    $default  reduce using rule 52 (MathParam)


state 52

   37 AttribuitionValue: NUMBER .
   53 MathParam: NUMBER .

    $end         reduce using rule 37 (AttribuitionValue)
    $end         [reduce using rule 53 (MathParam)]
    PLUS         reduce using rule 53 (MathParam)
    MINUS        reduce using rule 53 (MathParam)
    TIMES        reduce using rule 53 (MathParam)
    DIVIDE       reduce using rule 53 (MathParam)
    END_LINE     reduce using rule 37 (AttribuitionValue)
    END_LINE     [reduce using rule 53 (MathParam)]
    START        reduce using rule 37 (AttribuitionValue)
    START        [reduce using rule 53 (MathParam)]
    END          reduce using rule 37 (AttribuitionValue)
    END          [reduce using rule 53 (MathParam)]
    IF           reduce using rule 37 (AttribuitionValue)
    IF           [reduce using rule 53 (MathParam)]
    ELSE         reduce using rule 37 (AttribuitionValue)
    ELSE         [reduce using rule 53 (MathParam)]
    FOR          reduce using rule 37 (AttribuitionValue)
    FOR          [reduce using rule 53 (MathParam)]
    WHILE        reduce using rule 37 (AttribuitionValue)
    WHILE        [reduce using rule 53 (MathParam)]
    PRINT        reduce using rule 37 (AttribuitionValue)
    PRINT        [reduce using rule 53 (MathParam)]
    INT          reduce using rule 37 (AttribuitionValue)
    INT          [reduce using rule 53 (MathParam)]
    FLOAT        reduce using rule 37 (AttribuitionValue)
    FLOAT        [reduce using rule 53 (MathParam)]
    CHAR         reduce using rule 37 (AttribuitionValue)
    CHAR         [reduce using rule 53 (MathParam)]
    STRING_TYPE  reduce using rule 37 (AttribuitionValue)
    STRING_TYPE  [reduce using rule 53 (MathParam)]
    BOOL         reduce using rule 37 (AttribuitionValue)
    BOOL         [reduce using rule 53 (MathParam)]
    IDENTIFIER   reduce using rule 37 (AttribuitionValue)
    IDENTIFIER   [reduce using rule 53 (MathParam)]
    END_IF       reduce using rule 37 (AttribuitionValue)
    END_IF       [reduce using rule 53 (MathParam)]
    END_FOR      reduce using rule 37 (AttribuitionValue)
    END_FOR      [reduce using rule 53 (MathParam)]
    END_WHILE    reduce using rule 37 (AttribuitionValue)
    END_WHILE    [reduce using rule 53 (MathParam)]
    $default     reduce using rule 37 (AttribuitionValue)


state 53

   38 AttribuitionValue: STRING_VALUE .

    $default  reduce using rule 38 (AttribuitionValue)


state 54

   39 AttribuitionValue: TRUE .

    $default  reduce using rule 39 (AttribuitionValue)


state 55

   40 AttribuitionValue: FALSE .

    $default  reduce using rule 40 (AttribuitionValue)


state 56

   36 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 36 (AttribuitionExpression)


state 57

   41 AttribuitionValue: MathExpression .
   50 MathExpression: MathExpression . Operator MathExpression

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 41 (AttribuitionValue)

    Operator  go to state 71


state 58

   49 MathExpression: MathParam .

    $default  reduce using rule 49 (MathExpression)


state 59

   43 DeclarationExpression: Type IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 52
    STRING_VALUE      shift, and go to state 53
    TRUE              shift, and go to state 54
    FALSE             shift, and go to state 55

    AttribuitionValue  go to state 72
    MathExpression     go to state 57
    MathParam          go to state 58


state 60

   20 BoolExpression: IDENTIFIER LogicalComparer IDENTIFIER .

    $default  reduce using rule 20 (BoolExpression)


state 61

   18 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 18 (BoolComparasion)


state 62

   34 NumberOrIdentifier: IDENTIFIER .

    $default  reduce using rule 34 (NumberOrIdentifier)


state 63

   35 NumberOrIdentifier: NUMBER .

    $default  reduce using rule 35 (NumberOrIdentifier)


state 64

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER
   32              | FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier

    TO  shift, and go to state 73


state 65

   53 MathParam: NUMBER .

    $default  reduce using rule 53 (MathParam)


state 66

   50 MathExpression: MathExpression . Operator MathExpression
   51               | OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS

    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 68
    TIMES              shift, and go to state 69
    DIVIDE             shift, and go to state 70
    CLOSE_PARENTHESIS  shift, and go to state 74

    Operator  go to state 71


state 67

   54 Operator: PLUS .

    $default  reduce using rule 54 (Operator)


state 68

   55 Operator: MINUS .

    $default  reduce using rule 55 (Operator)


state 69

   57 Operator: TIMES .

    $default  reduce using rule 57 (Operator)


state 70

   56 Operator: DIVIDE .

    $default  reduce using rule 56 (Operator)


state 71

   50 MathExpression: MathExpression Operator . MathExpression

    OPEN_PARENTHESIS  shift, and go to state 50
    IDENTIFIER        shift, and go to state 51
    NUMBER            shift, and go to state 65

    MathExpression  go to state 75
    MathParam       go to state 58


state 72

   43 DeclarationExpression: Type IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 43 (DeclarationExpression)


state 73

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER
   32              | FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63

    NumberOrIdentifier  go to state 76


state 74

   51 MathExpression: OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .

    $default  reduce using rule 51 (MathExpression)


state 75

   50 MathExpression: MathExpression . Operator MathExpression
   50               | MathExpression Operator MathExpression .

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    PLUS      [reduce using rule 50 (MathExpression)]
    MINUS     [reduce using rule 50 (MathExpression)]
    TIMES     [reduce using rule 50 (MathExpression)]
    DIVIDE    [reduce using rule 50 (MathExpression)]
    $default  reduce using rule 50 (MathExpression)

    Operator  go to state 71


state 76

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER
   32              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .

    STEP  shift, and go to state 77

    $default  reduce using rule 32 (ForExpression)


state 77

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER

    NUMBER  shift, and go to state 78


state 78

   31 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .

    $default  reduce using rule 31 (ForExpression)
