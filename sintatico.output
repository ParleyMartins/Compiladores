

Terminals which are not used:

   PLUS
   MINUS
   TIMES
   DIVIDE
   POWER
   OPEN_PARENTHESIS
   CLOSE_PARENTHESIS
   NOT
   FUNCTION
   SCAN
   END_FUNCTION



Grammar
rule 1    Input ->		/* empty */
rule 2    Input -> Input Line
rule 3    Line -> END_LINE
rule 4    Line -> START
rule 5    Line -> Expression
rule 6    Line -> END
rule 7    Expression -> PrintExpression
rule 8    Expression -> IfExpression
rule 9    Expression -> WhileExpression
rule 10   Expression -> ForExpression
rule 11   Expression -> AttribuitionExpression
rule 12   Expression -> DeclarationExpression
rule 13   PrintExpression -> PRINT STRING_VALUE
rule 14   PrintExpression -> PRINT IDENTIFIER
rule 15   IfExpression -> IF BoolComparasion THEN
rule 16   IfExpression -> ELSE
rule 17   IfExpression -> END_IF
rule 18   BoolComparasion -> BoolExpression BinaryOperator BoolComparasion
rule 19   BoolComparasion -> BoolExpression
rule 20   BoolExpression -> IDENTIFIER LogicalComparer IDENTIFIER
rule 21   LogicalComparer -> LESS_THAN
rule 22   LogicalComparer -> GREATER_THAN
rule 23   LogicalComparer -> LESS_OR_EQUAL
rule 24   LogicalComparer -> GREATER_OR_EQUAL
rule 25   LogicalComparer -> DIFFERENT
rule 26   LogicalComparer -> EQUAL
rule 27   BinaryOperator -> AND
rule 28   BinaryOperator -> OR
rule 29   WhileExpression -> WHILE BoolComparasion
rule 30   WhileExpression -> END_WHILE
rule 31   ForExpression -> FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
rule 32   ForExpression -> FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
rule 33   ForExpression -> END_FOR
rule 34   NumberOrIdentifier -> IDENTIFIER
rule 35   NumberOrIdentifier -> NUMBER
rule 36   AttribuitionExpression -> IDENTIFIER RECEIVES AttribuitionValue
rule 37   AttribuitionValue -> NUMBER
rule 38   AttribuitionValue -> STRING_VALUE
rule 39   AttribuitionValue -> TRUE
rule 40   AttribuitionValue -> FALSE
rule 41   DeclarationExpression -> Type IDENTIFIER
rule 42   DeclarationExpression -> Type IDENTIFIER RECEIVES AttribuitionValue
rule 43   Type -> INT
rule 44   Type -> FLOAT
rule 45   Type -> CHAR
rule 46   Type -> STRING_TYPE
rule 47   Type -> BOOL

Terminals, with rules where they appear

$ (-1)
error (256)
PLUS (258)
MINUS (259)
TIMES (260)
DIVIDE (261)
POWER (262)
LESS_THAN (263) 21
GREATER_THAN (264) 22
LESS_OR_EQUAL (265) 23
GREATER_OR_EQUAL (266) 24
OPEN_PARENTHESIS (267)
CLOSE_PARENTHESIS (268)
DIFFERENT (269) 25
EQUAL (270) 26
RECEIVES (271) 36 42
AND (272) 27
OR (273) 28
NOT (274)
END_LINE (275) 3
START (276) 4
END (277) 6
IF (278) 15
THEN (279) 15
ELSE (280) 16
FOR (281) 31 32
WHILE (282) 29
FUNCTION (283)
FROM (284) 31 32
TO (285) 31 32
STEP (286) 31
PRINT (287) 13 14
SCAN (288)
INT (289) 43
FLOAT (290) 44
CHAR (291) 45
STRING_TYPE (292) 46
BOOL (293) 47
IDENTIFIER (294) 14 20 31 32 34 36 41 42
NUMBER (295) 31 35 37
STRING_VALUE (296) 13 38
END_IF (297) 17
END_FOR (298) 33
END_WHILE (299) 30
END_FUNCTION (300)
TRUE (301) 39
FALSE (302) 40

Nonterminals, with rules where they appear

Input (48)
    on left: 1 2, on right: 2
Line (49)
    on left: 3 4 5 6, on right: 2
Expression (50)
    on left: 7 8 9 10 11 12, on right: 5
PrintExpression (51)
    on left: 13 14, on right: 7
IfExpression (52)
    on left: 15 16 17, on right: 8
BoolComparasion (53)
    on left: 18 19, on right: 15 18 29
BoolExpression (54)
    on left: 20, on right: 18 19
LogicalComparer (55)
    on left: 21 22 23 24 25 26, on right: 20
BinaryOperator (56)
    on left: 27 28, on right: 18
WhileExpression (57)
    on left: 29 30, on right: 9
ForExpression (58)
    on left: 31 32 33, on right: 10
NumberOrIdentifier (59)
    on left: 34 35, on right: 31 32
AttribuitionExpression (60)
    on left: 36, on right: 11
AttribuitionValue (61)
    on left: 37 38 39 40, on right: 36 42
DeclarationExpression (62)
    on left: 41 42, on right: 12
Type (63)
    on left: 43 44 45 46 47, on right: 41 42


state 0

    $default	reduce using rule 1 (Input)

    Input	go to state 1



state 1

    Input  ->  Input . Line   (rule 2)

    $   	go to state 65
    END_LINE	shift, and go to state 2
    START	shift, and go to state 3
    END 	shift, and go to state 4
    IF  	shift, and go to state 5
    ELSE	shift, and go to state 6
    FOR 	shift, and go to state 7
    WHILE	shift, and go to state 8
    PRINT	shift, and go to state 9
    INT 	shift, and go to state 10
    FLOAT	shift, and go to state 11
    CHAR	shift, and go to state 12
    STRING_TYPE	shift, and go to state 13
    BOOL	shift, and go to state 14
    IDENTIFIER	shift, and go to state 15
    END_IF	shift, and go to state 16
    END_FOR	shift, and go to state 17
    END_WHILE	shift, and go to state 18

    Line	go to state 19
    Expression	go to state 20
    PrintExpression	go to state 21
    IfExpression	go to state 22
    WhileExpression	go to state 23
    ForExpression	go to state 24
    AttribuitionExpression	go to state 25
    DeclarationExpression	go to state 26
    Type	go to state 27



state 2

    Line  ->  END_LINE .   (rule 3)

    $default	reduce using rule 3 (Line)



state 3

    Line  ->  START .   (rule 4)

    $default	reduce using rule 4 (Line)



state 4

    Line  ->  END .   (rule 6)

    $default	reduce using rule 6 (Line)



state 5

    IfExpression  ->  IF . BoolComparasion THEN   (rule 15)

    IDENTIFIER	shift, and go to state 28

    BoolComparasion	go to state 29
    BoolExpression	go to state 30



state 6

    IfExpression  ->  ELSE .   (rule 16)

    $default	reduce using rule 16 (IfExpression)



state 7

    ForExpression  ->  FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 31)
    ForExpression  ->  FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier   (rule 32)

    IDENTIFIER	shift, and go to state 31



state 8

    WhileExpression  ->  WHILE . BoolComparasion   (rule 29)

    IDENTIFIER	shift, and go to state 28

    BoolComparasion	go to state 32
    BoolExpression	go to state 30



state 9

    PrintExpression  ->  PRINT . STRING_VALUE   (rule 13)
    PrintExpression  ->  PRINT . IDENTIFIER   (rule 14)

    IDENTIFIER	shift, and go to state 33
    STRING_VALUE	shift, and go to state 34



state 10

    Type  ->  INT .   (rule 43)

    $default	reduce using rule 43 (Type)



state 11

    Type  ->  FLOAT .   (rule 44)

    $default	reduce using rule 44 (Type)



state 12

    Type  ->  CHAR .   (rule 45)

    $default	reduce using rule 45 (Type)



state 13

    Type  ->  STRING_TYPE .   (rule 46)

    $default	reduce using rule 46 (Type)



state 14

    Type  ->  BOOL .   (rule 47)

    $default	reduce using rule 47 (Type)



state 15

    AttribuitionExpression  ->  IDENTIFIER . RECEIVES AttribuitionValue   (rule 36)

    RECEIVES	shift, and go to state 35



state 16

    IfExpression  ->  END_IF .   (rule 17)

    $default	reduce using rule 17 (IfExpression)



state 17

    ForExpression  ->  END_FOR .   (rule 33)

    $default	reduce using rule 33 (ForExpression)



state 18

    WhileExpression  ->  END_WHILE .   (rule 30)

    $default	reduce using rule 30 (WhileExpression)



state 19

    Input  ->  Input Line .   (rule 2)

    $default	reduce using rule 2 (Input)



state 20

    Line  ->  Expression .   (rule 5)

    $default	reduce using rule 5 (Line)



state 21

    Expression  ->  PrintExpression .   (rule 7)

    $default	reduce using rule 7 (Expression)



state 22

    Expression  ->  IfExpression .   (rule 8)

    $default	reduce using rule 8 (Expression)



state 23

    Expression  ->  WhileExpression .   (rule 9)

    $default	reduce using rule 9 (Expression)



state 24

    Expression  ->  ForExpression .   (rule 10)

    $default	reduce using rule 10 (Expression)



state 25

    Expression  ->  AttribuitionExpression .   (rule 11)

    $default	reduce using rule 11 (Expression)



state 26

    Expression  ->  DeclarationExpression .   (rule 12)

    $default	reduce using rule 12 (Expression)



state 27

    DeclarationExpression  ->  Type . IDENTIFIER   (rule 41)
    DeclarationExpression  ->  Type . IDENTIFIER RECEIVES AttribuitionValue   (rule 42)

    IDENTIFIER	shift, and go to state 36



state 28

    BoolExpression  ->  IDENTIFIER . LogicalComparer IDENTIFIER   (rule 20)

    LESS_THAN	shift, and go to state 37
    GREATER_THAN	shift, and go to state 38
    LESS_OR_EQUAL	shift, and go to state 39
    GREATER_OR_EQUAL	shift, and go to state 40
    DIFFERENT	shift, and go to state 41
    EQUAL	shift, and go to state 42

    LogicalComparer	go to state 43



state 29

    IfExpression  ->  IF BoolComparasion . THEN   (rule 15)

    THEN	shift, and go to state 44



state 30

    BoolComparasion  ->  BoolExpression . BinaryOperator BoolComparasion   (rule 18)
    BoolComparasion  ->  BoolExpression .   (rule 19)

    AND 	shift, and go to state 45
    OR  	shift, and go to state 46

    $default	reduce using rule 19 (BoolComparasion)

    BinaryOperator	go to state 47



state 31

    ForExpression  ->  FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 31)
    ForExpression  ->  FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier   (rule 32)

    FROM	shift, and go to state 48



state 32

    WhileExpression  ->  WHILE BoolComparasion .   (rule 29)

    $default	reduce using rule 29 (WhileExpression)



state 33

    PrintExpression  ->  PRINT IDENTIFIER .   (rule 14)

    $default	reduce using rule 14 (PrintExpression)



state 34

    PrintExpression  ->  PRINT STRING_VALUE .   (rule 13)

    $default	reduce using rule 13 (PrintExpression)



state 35

    AttribuitionExpression  ->  IDENTIFIER RECEIVES . AttribuitionValue   (rule 36)

    NUMBER	shift, and go to state 49
    STRING_VALUE	shift, and go to state 50
    TRUE	shift, and go to state 51
    FALSE	shift, and go to state 52

    AttribuitionValue	go to state 53



state 36

    DeclarationExpression  ->  Type IDENTIFIER .   (rule 41)
    DeclarationExpression  ->  Type IDENTIFIER . RECEIVES AttribuitionValue   (rule 42)

    RECEIVES	shift, and go to state 54

    $default	reduce using rule 41 (DeclarationExpression)



state 37

    LogicalComparer  ->  LESS_THAN .   (rule 21)

    $default	reduce using rule 21 (LogicalComparer)



state 38

    LogicalComparer  ->  GREATER_THAN .   (rule 22)

    $default	reduce using rule 22 (LogicalComparer)



state 39

    LogicalComparer  ->  LESS_OR_EQUAL .   (rule 23)

    $default	reduce using rule 23 (LogicalComparer)



state 40

    LogicalComparer  ->  GREATER_OR_EQUAL .   (rule 24)

    $default	reduce using rule 24 (LogicalComparer)



state 41

    LogicalComparer  ->  DIFFERENT .   (rule 25)

    $default	reduce using rule 25 (LogicalComparer)



state 42

    LogicalComparer  ->  EQUAL .   (rule 26)

    $default	reduce using rule 26 (LogicalComparer)



state 43

    BoolExpression  ->  IDENTIFIER LogicalComparer . IDENTIFIER   (rule 20)

    IDENTIFIER	shift, and go to state 55



state 44

    IfExpression  ->  IF BoolComparasion THEN .   (rule 15)

    $default	reduce using rule 15 (IfExpression)



state 45

    BinaryOperator  ->  AND .   (rule 27)

    $default	reduce using rule 27 (BinaryOperator)



state 46

    BinaryOperator  ->  OR .   (rule 28)

    $default	reduce using rule 28 (BinaryOperator)



state 47

    BoolComparasion  ->  BoolExpression BinaryOperator . BoolComparasion   (rule 18)

    IDENTIFIER	shift, and go to state 28

    BoolComparasion	go to state 56
    BoolExpression	go to state 30



state 48

    ForExpression  ->  FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 31)
    ForExpression  ->  FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier   (rule 32)

    IDENTIFIER	shift, and go to state 57
    NUMBER	shift, and go to state 58

    NumberOrIdentifier	go to state 59



state 49

    AttribuitionValue  ->  NUMBER .   (rule 37)

    $default	reduce using rule 37 (AttribuitionValue)



state 50

    AttribuitionValue  ->  STRING_VALUE .   (rule 38)

    $default	reduce using rule 38 (AttribuitionValue)



state 51

    AttribuitionValue  ->  TRUE .   (rule 39)

    $default	reduce using rule 39 (AttribuitionValue)



state 52

    AttribuitionValue  ->  FALSE .   (rule 40)

    $default	reduce using rule 40 (AttribuitionValue)



state 53

    AttribuitionExpression  ->  IDENTIFIER RECEIVES AttribuitionValue .   (rule 36)

    $default	reduce using rule 36 (AttribuitionExpression)



state 54

    DeclarationExpression  ->  Type IDENTIFIER RECEIVES . AttribuitionValue   (rule 42)

    NUMBER	shift, and go to state 49
    STRING_VALUE	shift, and go to state 50
    TRUE	shift, and go to state 51
    FALSE	shift, and go to state 52

    AttribuitionValue	go to state 60



state 55

    BoolExpression  ->  IDENTIFIER LogicalComparer IDENTIFIER .   (rule 20)

    $default	reduce using rule 20 (BoolExpression)



state 56

    BoolComparasion  ->  BoolExpression BinaryOperator BoolComparasion .   (rule 18)

    $default	reduce using rule 18 (BoolComparasion)



state 57

    NumberOrIdentifier  ->  IDENTIFIER .   (rule 34)

    $default	reduce using rule 34 (NumberOrIdentifier)



state 58

    NumberOrIdentifier  ->  NUMBER .   (rule 35)

    $default	reduce using rule 35 (NumberOrIdentifier)



state 59

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER   (rule 31)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier   (rule 32)

    TO  	shift, and go to state 61



state 60

    DeclarationExpression  ->  Type IDENTIFIER RECEIVES AttribuitionValue .   (rule 42)

    $default	reduce using rule 42 (DeclarationExpression)



state 61

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER   (rule 31)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier   (rule 32)

    IDENTIFIER	shift, and go to state 57
    NUMBER	shift, and go to state 58

    NumberOrIdentifier	go to state 62



state 62

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER   (rule 31)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .   (rule 32)

    STEP	shift, and go to state 63

    $default	reduce using rule 32 (ForExpression)



state 63

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER   (rule 31)

    NUMBER	shift, and go to state 64



state 64

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .   (rule 31)

    $default	reduce using rule 31 (ForExpression)



state 65

    $   	go to state 66



state 66

    $default	accept
