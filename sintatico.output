

Terminals which are not used:

   POWER
   NOT
   FUNCTION
   SCAN
   END_FUNCTION


State 56 contains 18 reduce/reduce conflicts.
State 77 contains 4 shift/reduce conflicts.

Grammar
rule 1    @1 ->		/* empty */
rule 2    StartExpression -> START @1 Input
rule 3    Input ->		/* empty */
rule 4    Input -> Input Line
rule 5    Line -> END_LINE
rule 6    Line -> Expression
rule 7    Line -> END
rule 8    Expression -> PrintExpression
rule 9    Expression -> IfExpression
rule 10   Expression -> WhileExpression
rule 11   Expression -> ForExpression
rule 12   Expression -> AttribuitionExpression
rule 13   Expression -> DeclarationExpression
rule 14   Expression -> error END_LINE
rule 15   PrintExpression -> PRINT STRING_VALUE
rule 16   PrintExpression -> PRINT IDENTIFIER
rule 17   IfExpression -> IF BoolComparasion THEN
rule 18   IfExpression -> ELSE
rule 19   IfExpression -> END_IF
rule 20   BoolComparasion -> BoolExpression BinaryOperator BoolComparasion
rule 21   BoolComparasion -> BoolExpression
rule 22   BoolExpression -> NumberOrIdentifier LogicalComparer NumberOrIdentifier
rule 23   LogicalComparer -> LESS_THAN
rule 24   LogicalComparer -> GREATER_THAN
rule 25   LogicalComparer -> LESS_OR_EQUAL
rule 26   LogicalComparer -> GREATER_OR_EQUAL
rule 27   LogicalComparer -> DIFFERENT
rule 28   LogicalComparer -> EQUAL
rule 29   BinaryOperator -> AND
rule 30   BinaryOperator -> OR
rule 31   WhileExpression -> WHILE BoolComparasion
rule 32   WhileExpression -> END_WHILE
rule 33   ForExpression -> FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
rule 34   ForExpression -> FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
rule 35   ForExpression -> END_FOR
rule 36   NumberOrIdentifier -> IDENTIFIER
rule 37   NumberOrIdentifier -> NUMBER
rule 38   AttribuitionExpression -> IDENTIFIER RECEIVES AttribuitionValue
rule 39   AttribuitionValue -> NUMBER
rule 40   AttribuitionValue -> STRING_VALUE
rule 41   AttribuitionValue -> TRUE
rule 42   AttribuitionValue -> FALSE
rule 43   AttribuitionValue -> MathExpression
rule 44   DeclarationExpression -> Type IDENTIFIER
rule 45   DeclarationExpression -> Type IDENTIFIER RECEIVES AttribuitionValue
rule 46   Type -> INT
rule 47   Type -> FLOAT
rule 48   Type -> CHAR
rule 49   Type -> STRING_TYPE
rule 50   Type -> BOOL
rule 51   MathExpression -> MathParam
rule 52   MathExpression -> MathExpression Operator MathExpression
rule 53   MathExpression -> OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS
rule 54   MathParam -> IDENTIFIER
rule 55   MathParam -> NUMBER
rule 56   Operator -> PLUS
rule 57   Operator -> MINUS
rule 58   Operator -> DIVIDE
rule 59   Operator -> TIMES

Terminals, with rules where they appear

$ (-1)
error (256) 14
PLUS (258) 56
MINUS (259) 57
TIMES (260) 59
DIVIDE (261) 58
POWER (262)
LESS_THAN (263) 23
GREATER_THAN (264) 24
LESS_OR_EQUAL (265) 25
GREATER_OR_EQUAL (266) 26
OPEN_PARENTHESIS (267) 53
CLOSE_PARENTHESIS (268) 53
DIFFERENT (269) 27
EQUAL (270) 28
RECEIVES (271) 38 45
AND (272) 29
OR (273) 30
NOT (274)
END_LINE (275) 5 14
START (276) 2
END (277) 7
IF (278) 17
THEN (279) 17
ELSE (280) 18
FOR (281) 33 34
WHILE (282) 31
FUNCTION (283)
FROM (284) 33 34
TO (285) 33 34
STEP (286) 33
PRINT (287) 15 16
SCAN (288)
INT (289) 46
FLOAT (290) 47
CHAR (291) 48
STRING_TYPE (292) 49
BOOL (293) 50
IDENTIFIER (294) 16 33 34 36 38 44 45 54
NUMBER (295) 33 37 39 55
STRING_VALUE (296) 15 40
END_IF (297) 19
END_FOR (298) 35
END_WHILE (299) 32
END_FUNCTION (300)
TRUE (301) 41
FALSE (302) 42

Nonterminals, with rules where they appear

StartExpression (48)
    on left: 2
@1 (49)
    on left: 1, on right: 2
Input (50)
    on left: 3 4, on right: 2 4
Line (51)
    on left: 5 6 7, on right: 4
Expression (52)
    on left: 8 9 10 11 12 13 14, on right: 6
PrintExpression (53)
    on left: 15 16, on right: 8
IfExpression (54)
    on left: 17 18 19, on right: 9
BoolComparasion (55)
    on left: 20 21, on right: 17 20 31
BoolExpression (56)
    on left: 22, on right: 20 21
LogicalComparer (57)
    on left: 23 24 25 26 27 28, on right: 22
BinaryOperator (58)
    on left: 29 30, on right: 20
WhileExpression (59)
    on left: 31 32, on right: 10
ForExpression (60)
    on left: 33 34 35, on right: 11
NumberOrIdentifier (61)
    on left: 36 37, on right: 22 33 34
AttribuitionExpression (62)
    on left: 38, on right: 12
AttribuitionValue (63)
    on left: 39 40 41 42 43, on right: 38 45
DeclarationExpression (64)
    on left: 44 45, on right: 13
Type (65)
    on left: 46 47 48 49 50, on right: 44 45
MathExpression (66)
    on left: 51 52 53, on right: 43 52 53
MathParam (67)
    on left: 54 55, on right: 51
Operator (68)
    on left: 56 57 58 59, on right: 52


state 0

    START	shift, and go to state 1

    StartExpression	go to state 81



state 1

    StartExpression  ->  START . @1 Input   (rule 2)

    $default	reduce using rule 1 (@1)

    @1  	go to state 2



state 2

    StartExpression  ->  START @1 . Input   (rule 2)

    $default	reduce using rule 3 (Input)

    Input	go to state 3



state 3

    StartExpression  ->  START @1 Input .   (rule 2)
    Input  ->  Input . Line   (rule 4)

    error	shift, and go to state 4
    END_LINE	shift, and go to state 5
    END 	shift, and go to state 6
    IF  	shift, and go to state 7
    ELSE	shift, and go to state 8
    FOR 	shift, and go to state 9
    WHILE	shift, and go to state 10
    PRINT	shift, and go to state 11
    INT 	shift, and go to state 12
    FLOAT	shift, and go to state 13
    CHAR	shift, and go to state 14
    STRING_TYPE	shift, and go to state 15
    BOOL	shift, and go to state 16
    IDENTIFIER	shift, and go to state 17
    END_IF	shift, and go to state 18
    END_FOR	shift, and go to state 19
    END_WHILE	shift, and go to state 20

    $   	reduce using rule 2 (StartExpression)
    PRINT	[reduce using rule 2 (StartExpression)]

    Line	go to state 21
    Expression	go to state 22
    PrintExpression	go to state 23
    IfExpression	go to state 24
    WhileExpression	go to state 25
    ForExpression	go to state 26
    AttribuitionExpression	go to state 27
    DeclarationExpression	go to state 28
    Type	go to state 29



state 4

    Expression  ->  error . END_LINE   (rule 14)

    END_LINE	shift, and go to state 30



state 5

    Line  ->  END_LINE .   (rule 5)

    $default	reduce using rule 5 (Line)



state 6

    Line  ->  END .   (rule 7)

    $default	reduce using rule 7 (Line)



state 7

    IfExpression  ->  IF . BoolComparasion THEN   (rule 17)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    BoolComparasion	go to state 33
    BoolExpression	go to state 34
    NumberOrIdentifier	go to state 35



state 8

    IfExpression  ->  ELSE .   (rule 18)

    $default	reduce using rule 18 (IfExpression)



state 9

    ForExpression  ->  FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 33)
    ForExpression  ->  FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier   (rule 34)

    IDENTIFIER	shift, and go to state 36



state 10

    WhileExpression  ->  WHILE . BoolComparasion   (rule 31)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    BoolComparasion	go to state 37
    BoolExpression	go to state 34
    NumberOrIdentifier	go to state 35



state 11

    PrintExpression  ->  PRINT . STRING_VALUE   (rule 15)
    PrintExpression  ->  PRINT . IDENTIFIER   (rule 16)

    IDENTIFIER	shift, and go to state 38
    STRING_VALUE	shift, and go to state 39



state 12

    Type  ->  INT .   (rule 46)

    $default	reduce using rule 46 (Type)



state 13

    Type  ->  FLOAT .   (rule 47)

    $default	reduce using rule 47 (Type)



state 14

    Type  ->  CHAR .   (rule 48)

    $default	reduce using rule 48 (Type)



state 15

    Type  ->  STRING_TYPE .   (rule 49)

    $default	reduce using rule 49 (Type)



state 16

    Type  ->  BOOL .   (rule 50)

    $default	reduce using rule 50 (Type)



state 17

    AttribuitionExpression  ->  IDENTIFIER . RECEIVES AttribuitionValue   (rule 38)

    RECEIVES	shift, and go to state 40



state 18

    IfExpression  ->  END_IF .   (rule 19)

    $default	reduce using rule 19 (IfExpression)



state 19

    ForExpression  ->  END_FOR .   (rule 35)

    $default	reduce using rule 35 (ForExpression)



state 20

    WhileExpression  ->  END_WHILE .   (rule 32)

    $default	reduce using rule 32 (WhileExpression)



state 21

    Input  ->  Input Line .   (rule 4)

    $default	reduce using rule 4 (Input)



state 22

    Line  ->  Expression .   (rule 6)

    $default	reduce using rule 6 (Line)



state 23

    Expression  ->  PrintExpression .   (rule 8)

    $default	reduce using rule 8 (Expression)



state 24

    Expression  ->  IfExpression .   (rule 9)

    $default	reduce using rule 9 (Expression)



state 25

    Expression  ->  WhileExpression .   (rule 10)

    $default	reduce using rule 10 (Expression)



state 26

    Expression  ->  ForExpression .   (rule 11)

    $default	reduce using rule 11 (Expression)



state 27

    Expression  ->  AttribuitionExpression .   (rule 12)

    $default	reduce using rule 12 (Expression)



state 28

    Expression  ->  DeclarationExpression .   (rule 13)

    $default	reduce using rule 13 (Expression)



state 29

    DeclarationExpression  ->  Type . IDENTIFIER   (rule 44)
    DeclarationExpression  ->  Type . IDENTIFIER RECEIVES AttribuitionValue   (rule 45)

    IDENTIFIER	shift, and go to state 41



state 30

    Expression  ->  error END_LINE .   (rule 14)

    $default	reduce using rule 14 (Expression)



state 31

    NumberOrIdentifier  ->  IDENTIFIER .   (rule 36)

    $default	reduce using rule 36 (NumberOrIdentifier)



state 32

    NumberOrIdentifier  ->  NUMBER .   (rule 37)

    $default	reduce using rule 37 (NumberOrIdentifier)



state 33

    IfExpression  ->  IF BoolComparasion . THEN   (rule 17)

    THEN	shift, and go to state 42



state 34

    BoolComparasion  ->  BoolExpression . BinaryOperator BoolComparasion   (rule 20)
    BoolComparasion  ->  BoolExpression .   (rule 21)

    AND 	shift, and go to state 43
    OR  	shift, and go to state 44

    $default	reduce using rule 21 (BoolComparasion)

    BinaryOperator	go to state 45



state 35

    BoolExpression  ->  NumberOrIdentifier . LogicalComparer NumberOrIdentifier   (rule 22)

    LESS_THAN	shift, and go to state 46
    GREATER_THAN	shift, and go to state 47
    LESS_OR_EQUAL	shift, and go to state 48
    GREATER_OR_EQUAL	shift, and go to state 49
    DIFFERENT	shift, and go to state 50
    EQUAL	shift, and go to state 51

    LogicalComparer	go to state 52



state 36

    ForExpression  ->  FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 33)
    ForExpression  ->  FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier   (rule 34)

    FROM	shift, and go to state 53



state 37

    WhileExpression  ->  WHILE BoolComparasion .   (rule 31)

    $default	reduce using rule 31 (WhileExpression)



state 38

    PrintExpression  ->  PRINT IDENTIFIER .   (rule 16)

    $default	reduce using rule 16 (PrintExpression)



state 39

    PrintExpression  ->  PRINT STRING_VALUE .   (rule 15)

    $default	reduce using rule 15 (PrintExpression)



state 40

    AttribuitionExpression  ->  IDENTIFIER RECEIVES . AttribuitionValue   (rule 38)

    OPEN_PARENTHESIS	shift, and go to state 54
    IDENTIFIER	shift, and go to state 55
    NUMBER	shift, and go to state 56
    STRING_VALUE	shift, and go to state 57
    TRUE	shift, and go to state 58
    FALSE	shift, and go to state 59

    AttribuitionValue	go to state 60
    MathExpression	go to state 61
    MathParam	go to state 62



state 41

    DeclarationExpression  ->  Type IDENTIFIER .   (rule 44)
    DeclarationExpression  ->  Type IDENTIFIER . RECEIVES AttribuitionValue   (rule 45)

    RECEIVES	shift, and go to state 63

    $default	reduce using rule 44 (DeclarationExpression)



state 42

    IfExpression  ->  IF BoolComparasion THEN .   (rule 17)

    $default	reduce using rule 17 (IfExpression)



state 43

    BinaryOperator  ->  AND .   (rule 29)

    $default	reduce using rule 29 (BinaryOperator)



state 44

    BinaryOperator  ->  OR .   (rule 30)

    $default	reduce using rule 30 (BinaryOperator)



state 45

    BoolComparasion  ->  BoolExpression BinaryOperator . BoolComparasion   (rule 20)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    BoolComparasion	go to state 64
    BoolExpression	go to state 34
    NumberOrIdentifier	go to state 35



state 46

    LogicalComparer  ->  LESS_THAN .   (rule 23)

    $default	reduce using rule 23 (LogicalComparer)



state 47

    LogicalComparer  ->  GREATER_THAN .   (rule 24)

    $default	reduce using rule 24 (LogicalComparer)



state 48

    LogicalComparer  ->  LESS_OR_EQUAL .   (rule 25)

    $default	reduce using rule 25 (LogicalComparer)



state 49

    LogicalComparer  ->  GREATER_OR_EQUAL .   (rule 26)

    $default	reduce using rule 26 (LogicalComparer)



state 50

    LogicalComparer  ->  DIFFERENT .   (rule 27)

    $default	reduce using rule 27 (LogicalComparer)



state 51

    LogicalComparer  ->  EQUAL .   (rule 28)

    $default	reduce using rule 28 (LogicalComparer)



state 52

    BoolExpression  ->  NumberOrIdentifier LogicalComparer . NumberOrIdentifier   (rule 22)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    NumberOrIdentifier	go to state 65



state 53

    ForExpression  ->  FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER   (rule 33)
    ForExpression  ->  FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier   (rule 34)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    NumberOrIdentifier	go to state 66



state 54

    MathExpression  ->  OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS   (rule 53)

    OPEN_PARENTHESIS	shift, and go to state 54
    IDENTIFIER	shift, and go to state 55
    NUMBER	shift, and go to state 67

    MathExpression	go to state 68
    MathParam	go to state 62



state 55

    MathParam  ->  IDENTIFIER .   (rule 54)

    $default	reduce using rule 54 (MathParam)



state 56

    AttribuitionValue  ->  NUMBER .   (rule 39)
    MathParam  ->  NUMBER .   (rule 55)

    $   	reduce using rule 39 (AttribuitionValue)
    $   	[reduce using rule 55 (MathParam)]
    error	reduce using rule 39 (AttribuitionValue)
    error	[reduce using rule 55 (MathParam)]
    PLUS	reduce using rule 55 (MathParam)
    MINUS	reduce using rule 55 (MathParam)
    TIMES	reduce using rule 55 (MathParam)
    DIVIDE	reduce using rule 55 (MathParam)
    END_LINE	reduce using rule 39 (AttribuitionValue)
    END_LINE	[reduce using rule 55 (MathParam)]
    END 	reduce using rule 39 (AttribuitionValue)
    END 	[reduce using rule 55 (MathParam)]
    IF  	reduce using rule 39 (AttribuitionValue)
    IF  	[reduce using rule 55 (MathParam)]
    ELSE	reduce using rule 39 (AttribuitionValue)
    ELSE	[reduce using rule 55 (MathParam)]
    FOR 	reduce using rule 39 (AttribuitionValue)
    FOR 	[reduce using rule 55 (MathParam)]
    WHILE	reduce using rule 39 (AttribuitionValue)
    WHILE	[reduce using rule 55 (MathParam)]
    PRINT	reduce using rule 39 (AttribuitionValue)
    PRINT	[reduce using rule 55 (MathParam)]
    SCAN	reduce using rule 39 (AttribuitionValue)
    SCAN	[reduce using rule 55 (MathParam)]
    FLOAT	reduce using rule 55 (MathParam)
    CHAR	reduce using rule 55 (MathParam)
    STRING_TYPE	reduce using rule 55 (MathParam)
    BOOL	reduce using rule 55 (MathParam)
    $default	reduce using rule 39 (AttribuitionValue)



state 57

    AttribuitionValue  ->  STRING_VALUE .   (rule 40)

    $default	reduce using rule 40 (AttribuitionValue)



state 58

    AttribuitionValue  ->  TRUE .   (rule 41)

    $default	reduce using rule 41 (AttribuitionValue)



state 59

    AttribuitionValue  ->  FALSE .   (rule 42)

    $default	reduce using rule 42 (AttribuitionValue)



state 60

    AttribuitionExpression  ->  IDENTIFIER RECEIVES AttribuitionValue .   (rule 38)

    $default	reduce using rule 38 (AttribuitionExpression)



state 61

    AttribuitionValue  ->  MathExpression .   (rule 43)
    MathExpression  ->  MathExpression . Operator MathExpression   (rule 52)

    PLUS	shift, and go to state 69
    MINUS	shift, and go to state 70
    TIMES	shift, and go to state 71
    DIVIDE	shift, and go to state 72

    $default	reduce using rule 43 (AttribuitionValue)

    Operator	go to state 73



state 62

    MathExpression  ->  MathParam .   (rule 51)

    $default	reduce using rule 51 (MathExpression)



state 63

    DeclarationExpression  ->  Type IDENTIFIER RECEIVES . AttribuitionValue   (rule 45)

    OPEN_PARENTHESIS	shift, and go to state 54
    IDENTIFIER	shift, and go to state 55
    NUMBER	shift, and go to state 56
    STRING_VALUE	shift, and go to state 57
    TRUE	shift, and go to state 58
    FALSE	shift, and go to state 59

    AttribuitionValue	go to state 74
    MathExpression	go to state 61
    MathParam	go to state 62



state 64

    BoolComparasion  ->  BoolExpression BinaryOperator BoolComparasion .   (rule 20)

    $default	reduce using rule 20 (BoolComparasion)



state 65

    BoolExpression  ->  NumberOrIdentifier LogicalComparer NumberOrIdentifier .   (rule 22)

    $default	reduce using rule 22 (BoolExpression)



state 66

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER   (rule 33)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier   (rule 34)

    TO  	shift, and go to state 75



state 67

    MathParam  ->  NUMBER .   (rule 55)

    $default	reduce using rule 55 (MathParam)



state 68

    MathExpression  ->  MathExpression . Operator MathExpression   (rule 52)
    MathExpression  ->  OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS   (rule 53)

    PLUS	shift, and go to state 69
    MINUS	shift, and go to state 70
    TIMES	shift, and go to state 71
    DIVIDE	shift, and go to state 72
    CLOSE_PARENTHESIS	shift, and go to state 76

    Operator	go to state 73



state 69

    Operator  ->  PLUS .   (rule 56)

    $default	reduce using rule 56 (Operator)



state 70

    Operator  ->  MINUS .   (rule 57)

    $default	reduce using rule 57 (Operator)



state 71

    Operator  ->  TIMES .   (rule 59)

    $default	reduce using rule 59 (Operator)



state 72

    Operator  ->  DIVIDE .   (rule 58)

    $default	reduce using rule 58 (Operator)



state 73

    MathExpression  ->  MathExpression Operator . MathExpression   (rule 52)

    OPEN_PARENTHESIS	shift, and go to state 54
    IDENTIFIER	shift, and go to state 55
    NUMBER	shift, and go to state 67

    MathExpression	go to state 77
    MathParam	go to state 62



state 74

    DeclarationExpression  ->  Type IDENTIFIER RECEIVES AttribuitionValue .   (rule 45)

    $default	reduce using rule 45 (DeclarationExpression)



state 75

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER   (rule 33)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier   (rule 34)

    IDENTIFIER	shift, and go to state 31
    NUMBER	shift, and go to state 32

    NumberOrIdentifier	go to state 78



state 76

    MathExpression  ->  OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .   (rule 53)

    $default	reduce using rule 53 (MathExpression)



state 77

    MathExpression  ->  MathExpression . Operator MathExpression   (rule 52)
    MathExpression  ->  MathExpression Operator MathExpression .   (rule 52)

    PLUS	shift, and go to state 69
    MINUS	shift, and go to state 70
    TIMES	shift, and go to state 71
    DIVIDE	shift, and go to state 72

    PLUS	[reduce using rule 52 (MathExpression)]
    MINUS	[reduce using rule 52 (MathExpression)]
    TIMES	[reduce using rule 52 (MathExpression)]
    DIVIDE	[reduce using rule 52 (MathExpression)]
    $default	reduce using rule 52 (MathExpression)

    Operator	go to state 73



state 78

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER   (rule 33)
    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .   (rule 34)

    STEP	shift, and go to state 79

    $default	reduce using rule 34 (ForExpression)



state 79

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER   (rule 33)

    NUMBER	shift, and go to state 80



state 80

    ForExpression  ->  FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .   (rule 33)

    $default	reduce using rule 33 (ForExpression)



state 81

    $   	go to state 82



state 82

    $   	go to state 83



state 83

    $default	accept
