Terminals unused in grammar

   POWER
   NOT
   FUNCTION
   END_FUNCTION


State 42 conflicts: 1 shift/reduce
State 61 conflicts: 18 reduce/reduce
State 82 conflicts: 4 shift/reduce


Grammar

    0 $accept: StartExpression $end

    1 $@1: /* empty */

    2 StartExpression: START $@1 Input

    3 Input: /* empty */
    4      | Input Line

    5 Line: END_LINE
    6     | Expression
    7     | END

    8 Expression: PrintExpression
    9           | IfExpression
   10           | WhileExpression
   11           | ForExpression
   12           | AttribuitionExpression
   13           | DeclarationExpression
   14           | ScanExpression
   15           | error END_LINE

   16 PrintExpression: PRINT STRING_VALUE
   17                | PRINT IDENTIFIER

   18 ScanExpression: SCAN IDENTIFIER
   19               | PRINT STRING_VALUE END_LINE SCAN IDENTIFIER

   20 IfExpression: IF BoolComparasion THEN
   21             | ELSE
   22             | END_IF

   23 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   24                | BoolExpression

   25 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier

   26 LogicalComparer: LESS_THAN
   27                | GREATER_THAN
   28                | LESS_OR_EQUAL
   29                | GREATER_OR_EQUAL
   30                | DIFFERENT
   31                | EQUAL

   32 BinaryOperator: AND
   33               | OR

   34 WhileExpression: WHILE BoolComparasion
   35                | END_WHILE

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
   38              | END_FOR

   39 NumberOrIdentifier: IDENTIFIER
   40                   | NUMBER

   41 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue

   42 AttribuitionValue: NUMBER
   43                  | STRING_VALUE
   44                  | MathExpression

   45 DeclarationExpression: Type IDENTIFIER
   46                      | Type IDENTIFIER RECEIVES AttribuitionValue

   47 Type: INT
   48     | FLOAT
   49     | CHAR
   50     | STRING_TYPE

   51 MathExpression: MathParam
   52               | MathExpression Operator MathExpression
   53               | OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS

   54 MathParam: IDENTIFIER
   55          | NUMBER

   56 Operator: PLUS
   57         | MINUS
   58         | DIVIDE
   59         | TIMES


Terminals, with rules where they appear

$end (0) 0
error (256) 15
PLUS (258) 56
MINUS (259) 57
TIMES (260) 59
DIVIDE (261) 58
POWER (262)
LESS_THAN (263) 26
GREATER_THAN (264) 27
LESS_OR_EQUAL (265) 28
GREATER_OR_EQUAL (266) 29
OPEN_PARENTHESIS (267) 53
CLOSE_PARENTHESIS (268) 53
DIFFERENT (269) 30
EQUAL (270) 31
RECEIVES (271) 41 46
AND (272) 32
OR (273) 33
NOT (274)
END_LINE (275) 5 15 19
START (276) 2
END (277) 7
IF (278) 20
THEN (279) 20
ELSE (280) 21
FOR (281) 36 37
WHILE (282) 34
FUNCTION (283)
FROM (284) 36 37
TO (285) 36 37
STEP (286) 36
PRINT (287) 16 17 19
SCAN (288) 18 19
INT (289) 47
FLOAT (290) 48
CHAR (291) 49
STRING_TYPE (292) 50
IDENTIFIER (293) 17 18 19 36 37 39 41 45 46 54
NUMBER (294) 36 40 42 55
STRING_VALUE (295) 16 19 43
END_IF (296) 22
END_FOR (297) 38
END_WHILE (298) 35
END_FUNCTION (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
StartExpression (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
Input (48)
    on left: 3 4, on right: 2 4
Line (49)
    on left: 5 6 7, on right: 4
Expression (50)
    on left: 8 9 10 11 12 13 14 15, on right: 6
PrintExpression (51)
    on left: 16 17, on right: 8
ScanExpression (52)
    on left: 18 19, on right: 14
IfExpression (53)
    on left: 20 21 22, on right: 9
BoolComparasion (54)
    on left: 23 24, on right: 20 23 34
BoolExpression (55)
    on left: 25, on right: 23 24
LogicalComparer (56)
    on left: 26 27 28 29 30 31, on right: 25
BinaryOperator (57)
    on left: 32 33, on right: 23
WhileExpression (58)
    on left: 34 35, on right: 10
ForExpression (59)
    on left: 36 37 38, on right: 11
NumberOrIdentifier (60)
    on left: 39 40, on right: 25 36 37
AttribuitionExpression (61)
    on left: 41, on right: 12
AttribuitionValue (62)
    on left: 42 43 44, on right: 41 46
DeclarationExpression (63)
    on left: 45 46, on right: 13
Type (64)
    on left: 47 48 49 50, on right: 45 46
MathExpression (65)
    on left: 51 52 53, on right: 44 52 53
MathParam (66)
    on left: 54 55, on right: 51
Operator (67)
    on left: 56 57 58 59, on right: 52


state 0

    0 $accept: . StartExpression $end

    START  shift, and go to state 1

    StartExpression  go to state 2


state 1

    2 StartExpression: START . $@1 Input

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


state 2

    0 $accept: StartExpression . $end

    $end  shift, and go to state 4


state 3

    2 StartExpression: START $@1 . Input

    $default  reduce using rule 3 (Input)

    Input  go to state 5


state 4

    0 $accept: StartExpression $end .

    $default  accept


state 5

    2 StartExpression: START $@1 Input .
    4 Input: Input . Line

    error        shift, and go to state 6
    END_LINE     shift, and go to state 7
    END          shift, and go to state 8
    IF           shift, and go to state 9
    ELSE         shift, and go to state 10
    FOR          shift, and go to state 11
    WHILE        shift, and go to state 12
    PRINT        shift, and go to state 13
    SCAN         shift, and go to state 14
    INT          shift, and go to state 15
    FLOAT        shift, and go to state 16
    CHAR         shift, and go to state 17
    STRING_TYPE  shift, and go to state 18
    IDENTIFIER   shift, and go to state 19
    END_IF       shift, and go to state 20
    END_FOR      shift, and go to state 21
    END_WHILE    shift, and go to state 22

    $end  reduce using rule 2 (StartExpression)

    Line                    go to state 23
    Expression              go to state 24
    PrintExpression         go to state 25
    ScanExpression          go to state 26
    IfExpression            go to state 27
    WhileExpression         go to state 28
    ForExpression           go to state 29
    AttribuitionExpression  go to state 30
    DeclarationExpression   go to state 31
    Type                    go to state 32


state 6

   15 Expression: error . END_LINE

    END_LINE  shift, and go to state 33


state 7

    5 Line: END_LINE .

    $default  reduce using rule 5 (Line)


state 8

    7 Line: END .

    $default  reduce using rule 7 (Line)


state 9

   20 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 36
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 10

   21 IfExpression: ELSE .

    $default  reduce using rule 21 (IfExpression)


state 11

   36 ForExpression: FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 39


state 12

   34 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 40
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 13

   16 PrintExpression: PRINT . STRING_VALUE
   17                | PRINT . IDENTIFIER
   19 ScanExpression: PRINT . STRING_VALUE END_LINE SCAN IDENTIFIER

    IDENTIFIER    shift, and go to state 41
    STRING_VALUE  shift, and go to state 42


state 14

   18 ScanExpression: SCAN . IDENTIFIER

    IDENTIFIER  shift, and go to state 43


state 15

   47 Type: INT .

    $default  reduce using rule 47 (Type)


state 16

   48 Type: FLOAT .

    $default  reduce using rule 48 (Type)


state 17

   49 Type: CHAR .

    $default  reduce using rule 49 (Type)


state 18

   50 Type: STRING_TYPE .

    $default  reduce using rule 50 (Type)


state 19

   41 AttribuitionExpression: IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 44


state 20

   22 IfExpression: END_IF .

    $default  reduce using rule 22 (IfExpression)


state 21

   38 ForExpression: END_FOR .

    $default  reduce using rule 38 (ForExpression)


state 22

   35 WhileExpression: END_WHILE .

    $default  reduce using rule 35 (WhileExpression)


state 23

    4 Input: Input Line .

    $default  reduce using rule 4 (Input)


state 24

    6 Line: Expression .

    $default  reduce using rule 6 (Line)


state 25

    8 Expression: PrintExpression .

    $default  reduce using rule 8 (Expression)


state 26

   14 Expression: ScanExpression .

    $default  reduce using rule 14 (Expression)


state 27

    9 Expression: IfExpression .

    $default  reduce using rule 9 (Expression)


state 28

   10 Expression: WhileExpression .

    $default  reduce using rule 10 (Expression)


state 29

   11 Expression: ForExpression .

    $default  reduce using rule 11 (Expression)


state 30

   12 Expression: AttribuitionExpression .

    $default  reduce using rule 12 (Expression)


state 31

   13 Expression: DeclarationExpression .

    $default  reduce using rule 13 (Expression)


state 32

   45 DeclarationExpression: Type . IDENTIFIER
   46                      | Type . IDENTIFIER RECEIVES AttribuitionValue

    IDENTIFIER  shift, and go to state 45


state 33

   15 Expression: error END_LINE .

    $default  reduce using rule 15 (Expression)


state 34

   39 NumberOrIdentifier: IDENTIFIER .

    $default  reduce using rule 39 (NumberOrIdentifier)


state 35

   40 NumberOrIdentifier: NUMBER .

    $default  reduce using rule 40 (NumberOrIdentifier)


state 36

   20 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 46


state 37

   23 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   24                | BoolExpression .

    AND  shift, and go to state 47
    OR   shift, and go to state 48

    $default  reduce using rule 24 (BoolComparasion)

    BinaryOperator  go to state 49


state 38

   25 BoolExpression: NumberOrIdentifier . LogicalComparer NumberOrIdentifier

    LESS_THAN         shift, and go to state 50
    GREATER_THAN      shift, and go to state 51
    LESS_OR_EQUAL     shift, and go to state 52
    GREATER_OR_EQUAL  shift, and go to state 53
    DIFFERENT         shift, and go to state 54
    EQUAL             shift, and go to state 55

    LogicalComparer  go to state 56


state 39

   36 ForExpression: FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier

    FROM  shift, and go to state 57


state 40

   34 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 34 (WhileExpression)


state 41

   17 PrintExpression: PRINT IDENTIFIER .

    $default  reduce using rule 17 (PrintExpression)


state 42

   16 PrintExpression: PRINT STRING_VALUE .
   19 ScanExpression: PRINT STRING_VALUE . END_LINE SCAN IDENTIFIER

    END_LINE  shift, and go to state 58

    END_LINE  [reduce using rule 16 (PrintExpression)]
    $default  reduce using rule 16 (PrintExpression)


state 43

   18 ScanExpression: SCAN IDENTIFIER .

    $default  reduce using rule 18 (ScanExpression)


state 44

   41 AttribuitionExpression: IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENTIFIER        shift, and go to state 60
    NUMBER            shift, and go to state 61
    STRING_VALUE      shift, and go to state 62

    AttribuitionValue  go to state 63
    MathExpression     go to state 64
    MathParam          go to state 65


state 45

   45 DeclarationExpression: Type IDENTIFIER .
   46                      | Type IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 66

    $default  reduce using rule 45 (DeclarationExpression)


state 46

   20 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 20 (IfExpression)


state 47

   32 BinaryOperator: AND .

    $default  reduce using rule 32 (BinaryOperator)


state 48

   33 BinaryOperator: OR .

    $default  reduce using rule 33 (BinaryOperator)


state 49

   23 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 67
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 50

   26 LogicalComparer: LESS_THAN .

    $default  reduce using rule 26 (LogicalComparer)


state 51

   27 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 27 (LogicalComparer)


state 52

   28 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 28 (LogicalComparer)


state 53

   29 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 29 (LogicalComparer)


state 54

   30 LogicalComparer: DIFFERENT .

    $default  reduce using rule 30 (LogicalComparer)


state 55

   31 LogicalComparer: EQUAL .

    $default  reduce using rule 31 (LogicalComparer)


state 56

   25 BoolExpression: NumberOrIdentifier LogicalComparer . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 68


state 57

   36 ForExpression: FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 69


state 58

   19 ScanExpression: PRINT STRING_VALUE END_LINE . SCAN IDENTIFIER

    SCAN  shift, and go to state 70


state 59

   53 MathExpression: OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENTIFIER        shift, and go to state 60
    NUMBER            shift, and go to state 71

    MathExpression  go to state 72
    MathParam       go to state 65


state 60

   54 MathParam: IDENTIFIER .

    $default  reduce using rule 54 (MathParam)


state 61

   42 AttribuitionValue: NUMBER .
   55 MathParam: NUMBER .

    $end         reduce using rule 42 (AttribuitionValue)
    $end         [reduce using rule 55 (MathParam)]
    error        reduce using rule 42 (AttribuitionValue)
    error        [reduce using rule 55 (MathParam)]
    PLUS         reduce using rule 55 (MathParam)
    MINUS        reduce using rule 55 (MathParam)
    TIMES        reduce using rule 55 (MathParam)
    DIVIDE       reduce using rule 55 (MathParam)
    END_LINE     reduce using rule 42 (AttribuitionValue)
    END_LINE     [reduce using rule 55 (MathParam)]
    END          reduce using rule 42 (AttribuitionValue)
    END          [reduce using rule 55 (MathParam)]
    IF           reduce using rule 42 (AttribuitionValue)
    IF           [reduce using rule 55 (MathParam)]
    ELSE         reduce using rule 42 (AttribuitionValue)
    ELSE         [reduce using rule 55 (MathParam)]
    FOR          reduce using rule 42 (AttribuitionValue)
    FOR          [reduce using rule 55 (MathParam)]
    WHILE        reduce using rule 42 (AttribuitionValue)
    WHILE        [reduce using rule 55 (MathParam)]
    PRINT        reduce using rule 42 (AttribuitionValue)
    PRINT        [reduce using rule 55 (MathParam)]
    SCAN         reduce using rule 42 (AttribuitionValue)
    SCAN         [reduce using rule 55 (MathParam)]
    INT          reduce using rule 42 (AttribuitionValue)
    INT          [reduce using rule 55 (MathParam)]
    FLOAT        reduce using rule 42 (AttribuitionValue)
    FLOAT        [reduce using rule 55 (MathParam)]
    CHAR         reduce using rule 42 (AttribuitionValue)
    CHAR         [reduce using rule 55 (MathParam)]
    STRING_TYPE  reduce using rule 42 (AttribuitionValue)
    STRING_TYPE  [reduce using rule 55 (MathParam)]
    IDENTIFIER   reduce using rule 42 (AttribuitionValue)
    IDENTIFIER   [reduce using rule 55 (MathParam)]
    END_IF       reduce using rule 42 (AttribuitionValue)
    END_IF       [reduce using rule 55 (MathParam)]
    END_FOR      reduce using rule 42 (AttribuitionValue)
    END_FOR      [reduce using rule 55 (MathParam)]
    END_WHILE    reduce using rule 42 (AttribuitionValue)
    END_WHILE    [reduce using rule 55 (MathParam)]
    $default     reduce using rule 42 (AttribuitionValue)


state 62

   43 AttribuitionValue: STRING_VALUE .

    $default  reduce using rule 43 (AttribuitionValue)


state 63

   41 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 41 (AttribuitionExpression)


state 64

   44 AttribuitionValue: MathExpression .
   52 MathExpression: MathExpression . Operator MathExpression

    PLUS    shift, and go to state 73
    MINUS   shift, and go to state 74
    TIMES   shift, and go to state 75
    DIVIDE  shift, and go to state 76

    $default  reduce using rule 44 (AttribuitionValue)

    Operator  go to state 77


state 65

   51 MathExpression: MathParam .

    $default  reduce using rule 51 (MathExpression)


state 66

   46 DeclarationExpression: Type IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENTIFIER        shift, and go to state 60
    NUMBER            shift, and go to state 61
    STRING_VALUE      shift, and go to state 62

    AttribuitionValue  go to state 78
    MathExpression     go to state 64
    MathParam          go to state 65


state 67

   23 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 23 (BoolComparasion)


state 68

   25 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier .

    $default  reduce using rule 25 (BoolExpression)


state 69

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier

    TO  shift, and go to state 79


state 70

   19 ScanExpression: PRINT STRING_VALUE END_LINE SCAN . IDENTIFIER

    IDENTIFIER  shift, and go to state 80


state 71

   55 MathParam: NUMBER .

    $default  reduce using rule 55 (MathParam)


state 72

   52 MathExpression: MathExpression . Operator MathExpression
   53               | OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS

    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    TIMES              shift, and go to state 75
    DIVIDE             shift, and go to state 76
    CLOSE_PARENTHESIS  shift, and go to state 81

    Operator  go to state 77


state 73

   56 Operator: PLUS .

    $default  reduce using rule 56 (Operator)


state 74

   57 Operator: MINUS .

    $default  reduce using rule 57 (Operator)


state 75

   59 Operator: TIMES .

    $default  reduce using rule 59 (Operator)


state 76

   58 Operator: DIVIDE .

    $default  reduce using rule 58 (Operator)


state 77

   52 MathExpression: MathExpression Operator . MathExpression

    OPEN_PARENTHESIS  shift, and go to state 59
    IDENTIFIER        shift, and go to state 60
    NUMBER            shift, and go to state 71

    MathExpression  go to state 82
    MathParam       go to state 65


state 78

   46 DeclarationExpression: Type IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 46 (DeclarationExpression)


state 79

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 83


state 80

   19 ScanExpression: PRINT STRING_VALUE END_LINE SCAN IDENTIFIER .

    $default  reduce using rule 19 (ScanExpression)


state 81

   53 MathExpression: OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .

    $default  reduce using rule 53 (MathExpression)


state 82

   52 MathExpression: MathExpression . Operator MathExpression
   52               | MathExpression Operator MathExpression .

    PLUS    shift, and go to state 73
    MINUS   shift, and go to state 74
    TIMES   shift, and go to state 75
    DIVIDE  shift, and go to state 76

    PLUS      [reduce using rule 52 (MathExpression)]
    MINUS     [reduce using rule 52 (MathExpression)]
    TIMES     [reduce using rule 52 (MathExpression)]
    DIVIDE    [reduce using rule 52 (MathExpression)]
    $default  reduce using rule 52 (MathExpression)

    Operator  go to state 77


state 83

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .

    STEP  shift, and go to state 84

    $default  reduce using rule 37 (ForExpression)


state 84

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER

    NUMBER  shift, and go to state 85


state 85

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .

    $default  reduce using rule 36 (ForExpression)
