Terminals unused in grammar

   POWER
   NOT
   FUNCTION
   END_FUNCTION


State 60 conflicts: 18 reduce/reduce
State 79 conflicts: 4 shift/reduce


Grammar

    0 $accept: StartExpression $end

    1 $@1: /* empty */

    2 StartExpression: START $@1 Input

    3 Input: /* empty */
    4      | Input Line

    5 Line: END_LINE
    6     | Expression
    7     | END

    8 Expression: PrintExpression
    9           | IfExpression
   10           | WhileExpression
   11           | ForExpression
   12           | AttribuitionExpression
   13           | DeclarationExpression
   14           | ScanExpression
   15           | error END_LINE

   16 PrintExpression: PRINT STRING_VALUE
   17                | PRINT IDENTIFIER

   18 ScanExpression: SCAN IDENTIFIER

   19 IfExpression: IF BoolComparasion THEN
   20             | ELSE
   21             | END_IF

   22 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   23                | BoolExpression

   24 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier

   25 LogicalComparer: LESS_THAN
   26                | GREATER_THAN
   27                | LESS_OR_EQUAL
   28                | GREATER_OR_EQUAL
   29                | DIFFERENT
   30                | EQUAL

   31 BinaryOperator: AND
   32               | OR

   33 WhileExpression: WHILE BoolComparasion
   34                | END_WHILE

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   36              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
   37              | END_FOR

   38 NumberOrIdentifier: IDENTIFIER
   39                   | NUMBER

   40 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue

   41 AttribuitionValue: NUMBER
   42                  | STRING_VALUE
   43                  | MathExpression

   44 DeclarationExpression: Type IDENTIFIER
   45                      | Type IDENTIFIER RECEIVES AttribuitionValue

   46 Type: INT
   47     | FLOAT
   48     | CHAR
   49     | STRING_TYPE

   50 MathExpression: MathParam
   51               | MathExpression Operator MathExpression
   52               | OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS

   53 MathParam: IDENTIFIER
   54          | NUMBER

   55 Operator: PLUS
   56         | MINUS
   57         | DIVIDE
   58         | TIMES


Terminals, with rules where they appear

$end (0) 0
error (256) 15
PLUS (258) 55
MINUS (259) 56
TIMES (260) 58
DIVIDE (261) 57
POWER (262)
LESS_THAN (263) 25
GREATER_THAN (264) 26
LESS_OR_EQUAL (265) 27
GREATER_OR_EQUAL (266) 28
OPEN_PARENTHESIS (267) 52
CLOSE_PARENTHESIS (268) 52
DIFFERENT (269) 29
EQUAL (270) 30
RECEIVES (271) 40 45
AND (272) 31
OR (273) 32
NOT (274)
END_LINE (275) 5 15
START (276) 2
END (277) 7
IF (278) 19
THEN (279) 19
ELSE (280) 20
FOR (281) 35 36
WHILE (282) 33
FUNCTION (283)
FROM (284) 35 36
TO (285) 35 36
STEP (286) 35
PRINT (287) 16 17
SCAN (288) 18
INT (289) 46
FLOAT (290) 47
CHAR (291) 48
STRING_TYPE (292) 49
IDENTIFIER (293) 17 18 35 36 38 40 44 45 53
NUMBER (294) 35 39 41 54
STRING_VALUE (295) 16 42
END_IF (296) 21
END_FOR (297) 37
END_WHILE (298) 34
END_FUNCTION (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
StartExpression (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
Input (48)
    on left: 3 4, on right: 2 4
Line (49)
    on left: 5 6 7, on right: 4
Expression (50)
    on left: 8 9 10 11 12 13 14 15, on right: 6
PrintExpression (51)
    on left: 16 17, on right: 8
ScanExpression (52)
    on left: 18, on right: 14
IfExpression (53)
    on left: 19 20 21, on right: 9
BoolComparasion (54)
    on left: 22 23, on right: 19 22 33
BoolExpression (55)
    on left: 24, on right: 22 23
LogicalComparer (56)
    on left: 25 26 27 28 29 30, on right: 24
BinaryOperator (57)
    on left: 31 32, on right: 22
WhileExpression (58)
    on left: 33 34, on right: 10
ForExpression (59)
    on left: 35 36 37, on right: 11
NumberOrIdentifier (60)
    on left: 38 39, on right: 24 35 36
AttribuitionExpression (61)
    on left: 40, on right: 12
AttribuitionValue (62)
    on left: 41 42 43, on right: 40 45
DeclarationExpression (63)
    on left: 44 45, on right: 13
Type (64)
    on left: 46 47 48 49, on right: 44 45
MathExpression (65)
    on left: 50 51 52, on right: 43 51 52
MathParam (66)
    on left: 53 54, on right: 50
Operator (67)
    on left: 55 56 57 58, on right: 51


state 0

    0 $accept: . StartExpression $end

    START  shift, and go to state 1

    StartExpression  go to state 2


state 1

    2 StartExpression: START . $@1 Input

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


state 2

    0 $accept: StartExpression . $end

    $end  shift, and go to state 4


state 3

    2 StartExpression: START $@1 . Input

    $default  reduce using rule 3 (Input)

    Input  go to state 5


state 4

    0 $accept: StartExpression $end .

    $default  accept


state 5

    2 StartExpression: START $@1 Input .
    4 Input: Input . Line

    error        shift, and go to state 6
    END_LINE     shift, and go to state 7
    END          shift, and go to state 8
    IF           shift, and go to state 9
    ELSE         shift, and go to state 10
    FOR          shift, and go to state 11
    WHILE        shift, and go to state 12
    PRINT        shift, and go to state 13
    SCAN         shift, and go to state 14
    INT          shift, and go to state 15
    FLOAT        shift, and go to state 16
    CHAR         shift, and go to state 17
    STRING_TYPE  shift, and go to state 18
    IDENTIFIER   shift, and go to state 19
    END_IF       shift, and go to state 20
    END_FOR      shift, and go to state 21
    END_WHILE    shift, and go to state 22

    $end  reduce using rule 2 (StartExpression)

    Line                    go to state 23
    Expression              go to state 24
    PrintExpression         go to state 25
    ScanExpression          go to state 26
    IfExpression            go to state 27
    WhileExpression         go to state 28
    ForExpression           go to state 29
    AttribuitionExpression  go to state 30
    DeclarationExpression   go to state 31
    Type                    go to state 32


state 6

   15 Expression: error . END_LINE

    END_LINE  shift, and go to state 33


state 7

    5 Line: END_LINE .

    $default  reduce using rule 5 (Line)


state 8

    7 Line: END .

    $default  reduce using rule 7 (Line)


state 9

   19 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 36
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 10

   20 IfExpression: ELSE .

    $default  reduce using rule 20 (IfExpression)


state 11

   35 ForExpression: FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   36              | FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 39


state 12

   33 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 40
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 13

   16 PrintExpression: PRINT . STRING_VALUE
   17                | PRINT . IDENTIFIER

    IDENTIFIER    shift, and go to state 41
    STRING_VALUE  shift, and go to state 42


state 14

   18 ScanExpression: SCAN . IDENTIFIER

    IDENTIFIER  shift, and go to state 43


state 15

   46 Type: INT .

    $default  reduce using rule 46 (Type)


state 16

   47 Type: FLOAT .

    $default  reduce using rule 47 (Type)


state 17

   48 Type: CHAR .

    $default  reduce using rule 48 (Type)


state 18

   49 Type: STRING_TYPE .

    $default  reduce using rule 49 (Type)


state 19

   40 AttribuitionExpression: IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 44


state 20

   21 IfExpression: END_IF .

    $default  reduce using rule 21 (IfExpression)


state 21

   37 ForExpression: END_FOR .

    $default  reduce using rule 37 (ForExpression)


state 22

   34 WhileExpression: END_WHILE .

    $default  reduce using rule 34 (WhileExpression)


state 23

    4 Input: Input Line .

    $default  reduce using rule 4 (Input)


state 24

    6 Line: Expression .

    $default  reduce using rule 6 (Line)


state 25

    8 Expression: PrintExpression .

    $default  reduce using rule 8 (Expression)


state 26

   14 Expression: ScanExpression .

    $default  reduce using rule 14 (Expression)


state 27

    9 Expression: IfExpression .

    $default  reduce using rule 9 (Expression)


state 28

   10 Expression: WhileExpression .

    $default  reduce using rule 10 (Expression)


state 29

   11 Expression: ForExpression .

    $default  reduce using rule 11 (Expression)


state 30

   12 Expression: AttribuitionExpression .

    $default  reduce using rule 12 (Expression)


state 31

   13 Expression: DeclarationExpression .

    $default  reduce using rule 13 (Expression)


state 32

   44 DeclarationExpression: Type . IDENTIFIER
   45                      | Type . IDENTIFIER RECEIVES AttribuitionValue

    IDENTIFIER  shift, and go to state 45


state 33

   15 Expression: error END_LINE .

    $default  reduce using rule 15 (Expression)


state 34

   38 NumberOrIdentifier: IDENTIFIER .

    $default  reduce using rule 38 (NumberOrIdentifier)


state 35

   39 NumberOrIdentifier: NUMBER .

    $default  reduce using rule 39 (NumberOrIdentifier)


state 36

   19 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 46


state 37

   22 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   23                | BoolExpression .

    AND  shift, and go to state 47
    OR   shift, and go to state 48

    $default  reduce using rule 23 (BoolComparasion)

    BinaryOperator  go to state 49


state 38

   24 BoolExpression: NumberOrIdentifier . LogicalComparer NumberOrIdentifier

    LESS_THAN         shift, and go to state 50
    GREATER_THAN      shift, and go to state 51
    LESS_OR_EQUAL     shift, and go to state 52
    GREATER_OR_EQUAL  shift, and go to state 53
    DIFFERENT         shift, and go to state 54
    EQUAL             shift, and go to state 55

    LogicalComparer  go to state 56


state 39

   35 ForExpression: FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   36              | FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier

    FROM  shift, and go to state 57


state 40

   33 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 33 (WhileExpression)


state 41

   17 PrintExpression: PRINT IDENTIFIER .

    $default  reduce using rule 17 (PrintExpression)


state 42

   16 PrintExpression: PRINT STRING_VALUE .

    $default  reduce using rule 16 (PrintExpression)


state 43

   18 ScanExpression: SCAN IDENTIFIER .

    $default  reduce using rule 18 (ScanExpression)


state 44

   40 AttribuitionExpression: IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 60
    STRING_VALUE      shift, and go to state 61

    AttribuitionValue  go to state 62
    MathExpression     go to state 63
    MathParam          go to state 64


state 45

   44 DeclarationExpression: Type IDENTIFIER .
   45                      | Type IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 65

    $default  reduce using rule 44 (DeclarationExpression)


state 46

   19 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 19 (IfExpression)


state 47

   31 BinaryOperator: AND .

    $default  reduce using rule 31 (BinaryOperator)


state 48

   32 BinaryOperator: OR .

    $default  reduce using rule 32 (BinaryOperator)


state 49

   22 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    BoolComparasion     go to state 66
    BoolExpression      go to state 37
    NumberOrIdentifier  go to state 38


state 50

   25 LogicalComparer: LESS_THAN .

    $default  reduce using rule 25 (LogicalComparer)


state 51

   26 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 26 (LogicalComparer)


state 52

   27 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 27 (LogicalComparer)


state 53

   28 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 28 (LogicalComparer)


state 54

   29 LogicalComparer: DIFFERENT .

    $default  reduce using rule 29 (LogicalComparer)


state 55

   30 LogicalComparer: EQUAL .

    $default  reduce using rule 30 (LogicalComparer)


state 56

   24 BoolExpression: NumberOrIdentifier LogicalComparer . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 67


state 57

   35 ForExpression: FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   36              | FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 68


state 58

   52 MathExpression: OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 69

    MathExpression  go to state 70
    MathParam       go to state 64


state 59

   53 MathParam: IDENTIFIER .

    $default  reduce using rule 53 (MathParam)


state 60

   41 AttribuitionValue: NUMBER .
   54 MathParam: NUMBER .

    $end         reduce using rule 41 (AttribuitionValue)
    $end         [reduce using rule 54 (MathParam)]
    error        reduce using rule 41 (AttribuitionValue)
    error        [reduce using rule 54 (MathParam)]
    PLUS         reduce using rule 54 (MathParam)
    MINUS        reduce using rule 54 (MathParam)
    TIMES        reduce using rule 54 (MathParam)
    DIVIDE       reduce using rule 54 (MathParam)
    END_LINE     reduce using rule 41 (AttribuitionValue)
    END_LINE     [reduce using rule 54 (MathParam)]
    END          reduce using rule 41 (AttribuitionValue)
    END          [reduce using rule 54 (MathParam)]
    IF           reduce using rule 41 (AttribuitionValue)
    IF           [reduce using rule 54 (MathParam)]
    ELSE         reduce using rule 41 (AttribuitionValue)
    ELSE         [reduce using rule 54 (MathParam)]
    FOR          reduce using rule 41 (AttribuitionValue)
    FOR          [reduce using rule 54 (MathParam)]
    WHILE        reduce using rule 41 (AttribuitionValue)
    WHILE        [reduce using rule 54 (MathParam)]
    PRINT        reduce using rule 41 (AttribuitionValue)
    PRINT        [reduce using rule 54 (MathParam)]
    SCAN         reduce using rule 41 (AttribuitionValue)
    SCAN         [reduce using rule 54 (MathParam)]
    INT          reduce using rule 41 (AttribuitionValue)
    INT          [reduce using rule 54 (MathParam)]
    FLOAT        reduce using rule 41 (AttribuitionValue)
    FLOAT        [reduce using rule 54 (MathParam)]
    CHAR         reduce using rule 41 (AttribuitionValue)
    CHAR         [reduce using rule 54 (MathParam)]
    STRING_TYPE  reduce using rule 41 (AttribuitionValue)
    STRING_TYPE  [reduce using rule 54 (MathParam)]
    IDENTIFIER   reduce using rule 41 (AttribuitionValue)
    IDENTIFIER   [reduce using rule 54 (MathParam)]
    END_IF       reduce using rule 41 (AttribuitionValue)
    END_IF       [reduce using rule 54 (MathParam)]
    END_FOR      reduce using rule 41 (AttribuitionValue)
    END_FOR      [reduce using rule 54 (MathParam)]
    END_WHILE    reduce using rule 41 (AttribuitionValue)
    END_WHILE    [reduce using rule 54 (MathParam)]
    $default     reduce using rule 41 (AttribuitionValue)


state 61

   42 AttribuitionValue: STRING_VALUE .

    $default  reduce using rule 42 (AttribuitionValue)


state 62

   40 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 40 (AttribuitionExpression)


state 63

   43 AttribuitionValue: MathExpression .
   51 MathExpression: MathExpression . Operator MathExpression

    PLUS    shift, and go to state 71
    MINUS   shift, and go to state 72
    TIMES   shift, and go to state 73
    DIVIDE  shift, and go to state 74

    $default  reduce using rule 43 (AttribuitionValue)

    Operator  go to state 75


state 64

   50 MathExpression: MathParam .

    $default  reduce using rule 50 (MathExpression)


state 65

   45 DeclarationExpression: Type IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 60
    STRING_VALUE      shift, and go to state 61

    AttribuitionValue  go to state 76
    MathExpression     go to state 63
    MathParam          go to state 64


state 66

   22 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 22 (BoolComparasion)


state 67

   24 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier .

    $default  reduce using rule 24 (BoolExpression)


state 68

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER
   36              | FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier

    TO  shift, and go to state 77


state 69

   54 MathParam: NUMBER .

    $default  reduce using rule 54 (MathParam)


state 70

   51 MathExpression: MathExpression . Operator MathExpression
   52               | OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS

    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    TIMES              shift, and go to state 73
    DIVIDE             shift, and go to state 74
    CLOSE_PARENTHESIS  shift, and go to state 78

    Operator  go to state 75


state 71

   55 Operator: PLUS .

    $default  reduce using rule 55 (Operator)


state 72

   56 Operator: MINUS .

    $default  reduce using rule 56 (Operator)


state 73

   58 Operator: TIMES .

    $default  reduce using rule 58 (Operator)


state 74

   57 Operator: DIVIDE .

    $default  reduce using rule 57 (Operator)


state 75

   51 MathExpression: MathExpression Operator . MathExpression

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 69

    MathExpression  go to state 79
    MathParam       go to state 64


state 76

   45 DeclarationExpression: Type IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 45 (DeclarationExpression)


state 77

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER
   36              | FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 35

    NumberOrIdentifier  go to state 80


state 78

   52 MathExpression: OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .

    $default  reduce using rule 52 (MathExpression)


state 79

   51 MathExpression: MathExpression . Operator MathExpression
   51               | MathExpression Operator MathExpression .

    PLUS    shift, and go to state 71
    MINUS   shift, and go to state 72
    TIMES   shift, and go to state 73
    DIVIDE  shift, and go to state 74

    PLUS      [reduce using rule 51 (MathExpression)]
    MINUS     [reduce using rule 51 (MathExpression)]
    TIMES     [reduce using rule 51 (MathExpression)]
    DIVIDE    [reduce using rule 51 (MathExpression)]
    $default  reduce using rule 51 (MathExpression)

    Operator  go to state 75


state 80

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER
   36              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .

    STEP  shift, and go to state 81

    $default  reduce using rule 36 (ForExpression)


state 81

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER

    NUMBER  shift, and go to state 82


state 82

   35 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .

    $default  reduce using rule 35 (ForExpression)
