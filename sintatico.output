Terminals unused in grammar

   POWER
   NOT
   FUNCTION
   SCAN
   END_FUNCTION


State 60 conflicts: 18 reduce/reduce
State 82 conflicts: 4 shift/reduce


Grammar

    0 $accept: StartExpression $end

    1 $@1: /* empty */

    2 StartExpression: START $@1 Input

    3 Input: /* empty */
    4      | Input Line

    5 Line: END_LINE
    6     | Expression
    7     | END

    8 Expression: PrintExpression
    9           | IfExpression
   10           | WhileExpression
   11           | ForExpression
   12           | AttribuitionExpression
   13           | DeclarationExpression
   14           | error END_LINE

   15 PrintExpression: PRINT STRING_VALUE
   16                | PRINT IDENTIFIER

   17 IfExpression: IF BoolComparasion THEN
   18             | ELSE
   19             | END_IF

   20 BoolComparasion: BoolExpression BinaryOperator BoolComparasion
   21                | BoolExpression
   22                | TRUE
   23                | FALSE
   24                | IDENTIFIER

   25 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier

   26 LogicalComparer: LESS_THAN
   27                | GREATER_THAN
   28                | LESS_OR_EQUAL
   29                | GREATER_OR_EQUAL
   30                | DIFFERENT
   31                | EQUAL

   32 BinaryOperator: AND
   33               | OR

   34 WhileExpression: WHILE BoolComparasion
   35                | END_WHILE

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier
   38              | END_FOR

   39 NumberOrIdentifier: IDENTIFIER
   40                   | NUMBER

   41 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue

   42 AttribuitionValue: NUMBER
   43                  | STRING_VALUE
   44                  | TRUE
   45                  | FALSE
   46                  | MathExpression

   47 DeclarationExpression: Type IDENTIFIER
   48                      | Type IDENTIFIER RECEIVES AttribuitionValue

   49 Type: INT
   50     | FLOAT
   51     | CHAR
   52     | STRING_TYPE
   53     | BOOL

   54 MathExpression: MathParam
   55               | MathExpression Operator MathExpression
   56               | OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS

   57 MathParam: IDENTIFIER
   58          | NUMBER

   59 Operator: PLUS
   60         | MINUS
   61         | DIVIDE
   62         | TIMES


Terminals, with rules where they appear

$end (0) 0
error (256) 14
PLUS (258) 59
MINUS (259) 60
TIMES (260) 62
DIVIDE (261) 61
POWER (262)
LESS_THAN (263) 26
GREATER_THAN (264) 27
LESS_OR_EQUAL (265) 28
GREATER_OR_EQUAL (266) 29
OPEN_PARENTHESIS (267) 56
CLOSE_PARENTHESIS (268) 56
DIFFERENT (269) 30
EQUAL (270) 31
RECEIVES (271) 41 48
AND (272) 32
OR (273) 33
NOT (274)
END_LINE (275) 5 14
START (276) 2
END (277) 7
IF (278) 17
THEN (279) 17
ELSE (280) 18
FOR (281) 36 37
WHILE (282) 34
FUNCTION (283)
FROM (284) 36 37
TO (285) 36 37
STEP (286) 36
PRINT (287) 15 16
SCAN (288)
INT (289) 49
FLOAT (290) 50
CHAR (291) 51
STRING_TYPE (292) 52
BOOL (293) 53
IDENTIFIER (294) 16 24 36 37 39 41 47 48 57
NUMBER (295) 36 40 42 58
STRING_VALUE (296) 15 43
END_IF (297) 19
END_FOR (298) 38
END_WHILE (299) 35
END_FUNCTION (300)
TRUE (301) 22 44
FALSE (302) 23 45


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
StartExpression (49)
    on left: 2, on right: 0
$@1 (50)
    on left: 1, on right: 2
Input (51)
    on left: 3 4, on right: 2 4
Line (52)
    on left: 5 6 7, on right: 4
Expression (53)
    on left: 8 9 10 11 12 13 14, on right: 6
PrintExpression (54)
    on left: 15 16, on right: 8
IfExpression (55)
    on left: 17 18 19, on right: 9
BoolComparasion (56)
    on left: 20 21 22 23 24, on right: 17 20 34
BoolExpression (57)
    on left: 25, on right: 20 21
LogicalComparer (58)
    on left: 26 27 28 29 30 31, on right: 25
BinaryOperator (59)
    on left: 32 33, on right: 20
WhileExpression (60)
    on left: 34 35, on right: 10
ForExpression (61)
    on left: 36 37 38, on right: 11
NumberOrIdentifier (62)
    on left: 39 40, on right: 25 36 37
AttribuitionExpression (63)
    on left: 41, on right: 12
AttribuitionValue (64)
    on left: 42 43 44 45 46, on right: 41 48
DeclarationExpression (65)
    on left: 47 48, on right: 13
Type (66)
    on left: 49 50 51 52 53, on right: 47 48
MathExpression (67)
    on left: 54 55 56, on right: 46 55 56
MathParam (68)
    on left: 57 58, on right: 54
Operator (69)
    on left: 59 60 61 62, on right: 55


State 0

    0 $accept: . StartExpression $end

    START  shift, and go to state 1

    StartExpression  go to state 2


State 1

    2 StartExpression: START . $@1 Input

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


State 2

    0 $accept: StartExpression . $end

    $end  shift, and go to state 4


State 3

    2 StartExpression: START $@1 . Input

    $default  reduce using rule 3 (Input)

    Input  go to state 5


State 4

    0 $accept: StartExpression $end .

    $default  accept


State 5

    2 StartExpression: START $@1 Input .
    4 Input: Input . Line

    error        shift, and go to state 6
    END_LINE     shift, and go to state 7
    END          shift, and go to state 8
    IF           shift, and go to state 9
    ELSE         shift, and go to state 10
    FOR          shift, and go to state 11
    WHILE        shift, and go to state 12
    PRINT        shift, and go to state 13
    INT          shift, and go to state 14
    FLOAT        shift, and go to state 15
    CHAR         shift, and go to state 16
    STRING_TYPE  shift, and go to state 17
    BOOL         shift, and go to state 18
    IDENTIFIER   shift, and go to state 19
    END_IF       shift, and go to state 20
    END_FOR      shift, and go to state 21
    END_WHILE    shift, and go to state 22

    $end  reduce using rule 2 (StartExpression)

    Line                    go to state 23
    Expression              go to state 24
    PrintExpression         go to state 25
    IfExpression            go to state 26
    WhileExpression         go to state 27
    ForExpression           go to state 28
    AttribuitionExpression  go to state 29
    DeclarationExpression   go to state 30
    Type                    go to state 31


State 6

   14 Expression: error . END_LINE

    END_LINE  shift, and go to state 32


State 7

    5 Line: END_LINE .

    $default  reduce using rule 5 (Line)


State 8

    7 Line: END .

    $default  reduce using rule 7 (Line)


State 9

   17 IfExpression: IF . BoolComparasion THEN

    IDENTIFIER  shift, and go to state 33
    NUMBER      shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36

    BoolComparasion     go to state 37
    BoolExpression      go to state 38
    NumberOrIdentifier  go to state 39


State 10

   18 IfExpression: ELSE .

    $default  reduce using rule 18 (IfExpression)


State 11

   36 ForExpression: FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR . IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 40


State 12

   34 WhileExpression: WHILE . BoolComparasion

    IDENTIFIER  shift, and go to state 33
    NUMBER      shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36

    BoolComparasion     go to state 41
    BoolExpression      go to state 38
    NumberOrIdentifier  go to state 39


State 13

   15 PrintExpression: PRINT . STRING_VALUE
   16                | PRINT . IDENTIFIER

    IDENTIFIER    shift, and go to state 42
    STRING_VALUE  shift, and go to state 43


State 14

   49 Type: INT .

    $default  reduce using rule 49 (Type)


State 15

   50 Type: FLOAT .

    $default  reduce using rule 50 (Type)


State 16

   51 Type: CHAR .

    $default  reduce using rule 51 (Type)


State 17

   52 Type: STRING_TYPE .

    $default  reduce using rule 52 (Type)


State 18

   53 Type: BOOL .

    $default  reduce using rule 53 (Type)


State 19

   41 AttribuitionExpression: IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 44


State 20

   19 IfExpression: END_IF .

    $default  reduce using rule 19 (IfExpression)


State 21

   38 ForExpression: END_FOR .

    $default  reduce using rule 38 (ForExpression)


State 22

   35 WhileExpression: END_WHILE .

    $default  reduce using rule 35 (WhileExpression)


State 23

    4 Input: Input Line .

    $default  reduce using rule 4 (Input)


State 24

    6 Line: Expression .

    $default  reduce using rule 6 (Line)


State 25

    8 Expression: PrintExpression .

    $default  reduce using rule 8 (Expression)


State 26

    9 Expression: IfExpression .

    $default  reduce using rule 9 (Expression)


State 27

   10 Expression: WhileExpression .

    $default  reduce using rule 10 (Expression)


State 28

   11 Expression: ForExpression .

    $default  reduce using rule 11 (Expression)


State 29

   12 Expression: AttribuitionExpression .

    $default  reduce using rule 12 (Expression)


State 30

   13 Expression: DeclarationExpression .

    $default  reduce using rule 13 (Expression)


State 31

   47 DeclarationExpression: Type . IDENTIFIER
   48                      | Type . IDENTIFIER RECEIVES AttribuitionValue

    IDENTIFIER  shift, and go to state 45


State 32

   14 Expression: error END_LINE .

    $default  reduce using rule 14 (Expression)


State 33

   24 BoolComparasion: IDENTIFIER .
   39 NumberOrIdentifier: IDENTIFIER .

    LESS_THAN         reduce using rule 39 (NumberOrIdentifier)
    GREATER_THAN      reduce using rule 39 (NumberOrIdentifier)
    LESS_OR_EQUAL     reduce using rule 39 (NumberOrIdentifier)
    GREATER_OR_EQUAL  reduce using rule 39 (NumberOrIdentifier)
    DIFFERENT         reduce using rule 39 (NumberOrIdentifier)
    EQUAL             reduce using rule 39 (NumberOrIdentifier)
    $default          reduce using rule 24 (BoolComparasion)


State 34

   40 NumberOrIdentifier: NUMBER .

    $default  reduce using rule 40 (NumberOrIdentifier)


State 35

   22 BoolComparasion: TRUE .

    $default  reduce using rule 22 (BoolComparasion)


State 36

   23 BoolComparasion: FALSE .

    $default  reduce using rule 23 (BoolComparasion)


State 37

   17 IfExpression: IF BoolComparasion . THEN

    THEN  shift, and go to state 46


State 38

   20 BoolComparasion: BoolExpression . BinaryOperator BoolComparasion
   21                | BoolExpression .

    AND  shift, and go to state 47
    OR   shift, and go to state 48

    $default  reduce using rule 21 (BoolComparasion)

    BinaryOperator  go to state 49


State 39

   25 BoolExpression: NumberOrIdentifier . LogicalComparer NumberOrIdentifier

    LESS_THAN         shift, and go to state 50
    GREATER_THAN      shift, and go to state 51
    LESS_OR_EQUAL     shift, and go to state 52
    GREATER_OR_EQUAL  shift, and go to state 53
    DIFFERENT         shift, and go to state 54
    EQUAL             shift, and go to state 55

    LogicalComparer  go to state 56


State 40

   36 ForExpression: FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER . FROM NumberOrIdentifier TO NumberOrIdentifier

    FROM  shift, and go to state 57


State 41

   34 WhileExpression: WHILE BoolComparasion .

    $default  reduce using rule 34 (WhileExpression)


State 42

   16 PrintExpression: PRINT IDENTIFIER .

    $default  reduce using rule 16 (PrintExpression)


State 43

   15 PrintExpression: PRINT STRING_VALUE .

    $default  reduce using rule 15 (PrintExpression)


State 44

   41 AttribuitionExpression: IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 60
    STRING_VALUE      shift, and go to state 61
    TRUE              shift, and go to state 62
    FALSE             shift, and go to state 63

    AttribuitionValue  go to state 64
    MathExpression     go to state 65
    MathParam          go to state 66


State 45

   47 DeclarationExpression: Type IDENTIFIER .
   48                      | Type IDENTIFIER . RECEIVES AttribuitionValue

    RECEIVES  shift, and go to state 67

    $default  reduce using rule 47 (DeclarationExpression)


State 46

   17 IfExpression: IF BoolComparasion THEN .

    $default  reduce using rule 17 (IfExpression)


State 47

   32 BinaryOperator: AND .

    $default  reduce using rule 32 (BinaryOperator)


State 48

   33 BinaryOperator: OR .

    $default  reduce using rule 33 (BinaryOperator)


State 49

   20 BoolComparasion: BoolExpression BinaryOperator . BoolComparasion

    IDENTIFIER  shift, and go to state 33
    NUMBER      shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36

    BoolComparasion     go to state 68
    BoolExpression      go to state 38
    NumberOrIdentifier  go to state 39


State 50

   26 LogicalComparer: LESS_THAN .

    $default  reduce using rule 26 (LogicalComparer)


State 51

   27 LogicalComparer: GREATER_THAN .

    $default  reduce using rule 27 (LogicalComparer)


State 52

   28 LogicalComparer: LESS_OR_EQUAL .

    $default  reduce using rule 28 (LogicalComparer)


State 53

   29 LogicalComparer: GREATER_OR_EQUAL .

    $default  reduce using rule 29 (LogicalComparer)


State 54

   30 LogicalComparer: DIFFERENT .

    $default  reduce using rule 30 (LogicalComparer)


State 55

   31 LogicalComparer: EQUAL .

    $default  reduce using rule 31 (LogicalComparer)


State 56

   25 BoolExpression: NumberOrIdentifier LogicalComparer . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 69
    NUMBER      shift, and go to state 34

    NumberOrIdentifier  go to state 70


State 57

   36 ForExpression: FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM . NumberOrIdentifier TO NumberOrIdentifier

    IDENTIFIER  shift, and go to state 69
    NUMBER      shift, and go to state 34

    NumberOrIdentifier  go to state 71


State 58

   56 MathExpression: OPEN_PARENTHESIS . MathExpression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 72

    MathExpression  go to state 73
    MathParam       go to state 66


State 59

   57 MathParam: IDENTIFIER .

    $default  reduce using rule 57 (MathParam)


State 60

   42 AttribuitionValue: NUMBER .
   58 MathParam: NUMBER .

    $end         reduce using rule 42 (AttribuitionValue)
    $end         [reduce using rule 58 (MathParam)]
    error        reduce using rule 42 (AttribuitionValue)
    error        [reduce using rule 58 (MathParam)]
    PLUS         reduce using rule 58 (MathParam)
    MINUS        reduce using rule 58 (MathParam)
    TIMES        reduce using rule 58 (MathParam)
    DIVIDE       reduce using rule 58 (MathParam)
    END_LINE     reduce using rule 42 (AttribuitionValue)
    END_LINE     [reduce using rule 58 (MathParam)]
    END          reduce using rule 42 (AttribuitionValue)
    END          [reduce using rule 58 (MathParam)]
    IF           reduce using rule 42 (AttribuitionValue)
    IF           [reduce using rule 58 (MathParam)]
    ELSE         reduce using rule 42 (AttribuitionValue)
    ELSE         [reduce using rule 58 (MathParam)]
    FOR          reduce using rule 42 (AttribuitionValue)
    FOR          [reduce using rule 58 (MathParam)]
    WHILE        reduce using rule 42 (AttribuitionValue)
    WHILE        [reduce using rule 58 (MathParam)]
    PRINT        reduce using rule 42 (AttribuitionValue)
    PRINT        [reduce using rule 58 (MathParam)]
    INT          reduce using rule 42 (AttribuitionValue)
    INT          [reduce using rule 58 (MathParam)]
    FLOAT        reduce using rule 42 (AttribuitionValue)
    FLOAT        [reduce using rule 58 (MathParam)]
    CHAR         reduce using rule 42 (AttribuitionValue)
    CHAR         [reduce using rule 58 (MathParam)]
    STRING_TYPE  reduce using rule 42 (AttribuitionValue)
    STRING_TYPE  [reduce using rule 58 (MathParam)]
    BOOL         reduce using rule 42 (AttribuitionValue)
    BOOL         [reduce using rule 58 (MathParam)]
    IDENTIFIER   reduce using rule 42 (AttribuitionValue)
    IDENTIFIER   [reduce using rule 58 (MathParam)]
    END_IF       reduce using rule 42 (AttribuitionValue)
    END_IF       [reduce using rule 58 (MathParam)]
    END_FOR      reduce using rule 42 (AttribuitionValue)
    END_FOR      [reduce using rule 58 (MathParam)]
    END_WHILE    reduce using rule 42 (AttribuitionValue)
    END_WHILE    [reduce using rule 58 (MathParam)]
    $default     reduce using rule 42 (AttribuitionValue)


State 61

   43 AttribuitionValue: STRING_VALUE .

    $default  reduce using rule 43 (AttribuitionValue)


State 62

   44 AttribuitionValue: TRUE .

    $default  reduce using rule 44 (AttribuitionValue)


State 63

   45 AttribuitionValue: FALSE .

    $default  reduce using rule 45 (AttribuitionValue)


State 64

   41 AttribuitionExpression: IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 41 (AttribuitionExpression)


State 65

   46 AttribuitionValue: MathExpression .
   55 MathExpression: MathExpression . Operator MathExpression

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    TIMES   shift, and go to state 76
    DIVIDE  shift, and go to state 77

    $default  reduce using rule 46 (AttribuitionValue)

    Operator  go to state 78


State 66

   54 MathExpression: MathParam .

    $default  reduce using rule 54 (MathExpression)


State 67

   48 DeclarationExpression: Type IDENTIFIER RECEIVES . AttribuitionValue

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 60
    STRING_VALUE      shift, and go to state 61
    TRUE              shift, and go to state 62
    FALSE             shift, and go to state 63

    AttribuitionValue  go to state 79
    MathExpression     go to state 65
    MathParam          go to state 66


State 68

   20 BoolComparasion: BoolExpression BinaryOperator BoolComparasion .

    $default  reduce using rule 20 (BoolComparasion)


State 69

   39 NumberOrIdentifier: IDENTIFIER .

    $default  reduce using rule 39 (NumberOrIdentifier)


State 70

   25 BoolExpression: NumberOrIdentifier LogicalComparer NumberOrIdentifier .

    $default  reduce using rule 25 (BoolExpression)


State 71

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier . TO NumberOrIdentifier

    TO  shift, and go to state 80


State 72

   58 MathParam: NUMBER .

    $default  reduce using rule 58 (MathParam)


State 73

   55 MathExpression: MathExpression . Operator MathExpression
   56               | OPEN_PARENTHESIS MathExpression . CLOSE_PARENTHESIS

    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    TIMES              shift, and go to state 76
    DIVIDE             shift, and go to state 77
    CLOSE_PARENTHESIS  shift, and go to state 81

    Operator  go to state 78


State 74

   59 Operator: PLUS .

    $default  reduce using rule 59 (Operator)


State 75

   60 Operator: MINUS .

    $default  reduce using rule 60 (Operator)


State 76

   62 Operator: TIMES .

    $default  reduce using rule 62 (Operator)


State 77

   61 Operator: DIVIDE .

    $default  reduce using rule 61 (Operator)


State 78

   55 MathExpression: MathExpression Operator . MathExpression

    OPEN_PARENTHESIS  shift, and go to state 58
    IDENTIFIER        shift, and go to state 59
    NUMBER            shift, and go to state 72

    MathExpression  go to state 82
    MathParam       go to state 66


State 79

   48 DeclarationExpression: Type IDENTIFIER RECEIVES AttribuitionValue .

    $default  reduce using rule 48 (DeclarationExpression)


State 80

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO . NumberOrIdentifier

    IDENTIFIER  shift, and go to state 69
    NUMBER      shift, and go to state 34

    NumberOrIdentifier  go to state 83


State 81

   56 MathExpression: OPEN_PARENTHESIS MathExpression CLOSE_PARENTHESIS .

    $default  reduce using rule 56 (MathExpression)


State 82

   55 MathExpression: MathExpression . Operator MathExpression
   55               | MathExpression Operator MathExpression .

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    TIMES   shift, and go to state 76
    DIVIDE  shift, and go to state 77

    PLUS      [reduce using rule 55 (MathExpression)]
    MINUS     [reduce using rule 55 (MathExpression)]
    TIMES     [reduce using rule 55 (MathExpression)]
    DIVIDE    [reduce using rule 55 (MathExpression)]
    $default  reduce using rule 55 (MathExpression)

    Operator  go to state 78


State 83

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier . STEP NUMBER
   37              | FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier .

    STEP  shift, and go to state 84

    $default  reduce using rule 37 (ForExpression)


State 84

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP . NUMBER

    NUMBER  shift, and go to state 85


State 85

   36 ForExpression: FOR IDENTIFIER FROM NumberOrIdentifier TO NumberOrIdentifier STEP NUMBER .

    $default  reduce using rule 36 (ForExpression)
